{"version":3,"sources":["components/Footers/styles.module.scss","pages/NotFound/styles.module.scss","utils/index.js","utils/axios.js","store/actions/actionTypes.js","store/actions/authActions.js","components/Footers/AuthFooter.js","components/Navbars/TopNavBar.jsx","components/layouts/AuthLayout.jsx","pages/auth/LoginPage.jsx","pages/auth/RegisterPage.jsx","store/actions/timeLogActions.js","components/Footers/AdminFooter.js","components/layouts/DashboardLayout.jsx","pages/time_logs/LogForm.jsx","pages/time_logs/EditLog.jsx","store/actions/adminActions.js","pages/time_logs/admin/User.jsx","pages/time_logs/admin/Users.jsx","pages/time_logs/admin/UsersPage.jsx","pages/user/UpdatePasswordForm.jsx","store/actions/userProfileActions.js","pages/user/UpdateProfileForm.jsx","pages/user/EditProfilePage.jsx","pages/time_logs/Log.jsx","pages/time_logs/Logs.jsx","pages/time_logs/MonthPicker.jsx","pages/time_logs/LogsPage.jsx","pages/HomePage.jsx","pages/NotFound/NotFound.jsx","pages/auth/Logout.jsx","pages/user/UserPage.jsx","pages/Report/ReportFilterForm.jsx","pages/Report/BuildReport.jsx","pages/Report/ReportResult.jsx","pages/Report/ReportPage.jsx","Routes.jsx","App.js","store/reducers/adminReducer.js","store/reducers/authReducer.js","store/reducers/timeLogReducer.js","store/reducers/userProfileReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["module","exports","getHeaders","additional","timeLoggerUserToken","localStorage","getItem","Authorization","createUUID","replace","c","r","Math","random","toString","instance","axios","create","baseURL","process","USER_LOGGED_IN","USER_LOGIN_ERROR","USER_REGISTERED","USER_REGISTER_ERROR","USER_LOGGED_OUT","AUTH_LOADING","TIME_LOGS_LOADED","TIME_LOGS_LOAD_ERROR","TIME_LOGS_LOADING","TIME_LOG_SAVED","TIME_LOG_SAVE_ERROR","TIME_LOG_LOADED","TIME_LOG_LOAD_ERROR","TIME_LOG_LOADING","LOG_REPORT_LOADING","LOG_REPORT_LOADED","LOG_REPORT_LOAD_ERROR","USERS_LOADING","USERS_LOADED","USER_PROFILE_LOADING","USER_PROFILE_INFORMATION_LOADED","USER_PROFILE_UPDATED","USER_PROFILE_UPDATE_ERROR","USER_PASSWORD_UPDATED","USER_PASSWORD_UPDATE_ERROR","COMPANY_DATA_LOADING","COMPANY_DATA_LOADED","COMPANY_DATA_LOAD_ERROR","loadUserInfo","dispatch","type","Types","payload","get","headers","then","res","data","catch","error","removeItem","AuthFooter","className","Container","Row","Col","xl","Date","getFullYear","to","Nav","NavItem","NavLink","classes","footerNav","site_name","TopNavBar","props","auth","useSelector","state","Navbar","color","dark","expand","fluid","NavbarBrand","exact","tag","id","UncontrolledCollapse","navbar","toggler","xs","isAuthenticated","user","is_company_owner","AuthLayout","mainContent","React","useRef","location","useLocation","useEffect","document","body","classList","add","remove","documentElement","scrollTop","scrollingElement","current","ref","xmlns","preserveAspectRatio","version","viewBox","x","y","points","children","withRouter","history","useDispatch","useState","username","setUsername","password","setPassword","lg","md","Card","CardBody","Form","role","onSubmit","e","preventDefault","loginCreds","post","setItem","token","push","response","login","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","value","onChange","target","loginErrors","style","Button","disabled","loading","RegisterPage","email","setEmail","password1","setPassword1","password2","setPassword2","first_name","setFirstName","last_name","setLastName","phone","setPhone","message","setMessage","registerErrors","non_field_errors","event","registerData","key","register","autoComplete","loadLogs","filter","method","url","console","log","AdminFooter","rel","DashboardLayout","LogForm","timeLog","todayDate","moment","format","date","setDate","hour","setHour","minute","setMinute","injury_noted","setInjuryNoted","policy_violation_noted","setPolicyViolationNoted","comment","setComment","fontWeight","duration","parseInt","max","rows","checked","htmlFor","company","createLogError","logSaved","logSaveError","EditLog","match","logId","params","detail","loadSingleLog","Object","keys","singleLog","length","singleLogLoading","singleLogLoadError","put","updateTimeLog","loadUsers","User","deleteHandle","userId","confirmAlert","title","buttons","label","onClick","delete","deleteUser","scope","size","Link","Users","users","Table","responsive","map","UsersPage","admin","CardHeader","UpdatePasswordForm","userProfile","old_password","setOldPassword","new_password1","setNewPassword1","new_password2","setNewPassword2","passwordUpdateErrors","userPasswordUpdated","UpdateProfileForm","address","setAddress","city","setCity","country","setCountry","postal_code","setPostalCode","profileData","inputId","labelText","hasError","userProfileUpdateErrors","errorMsg","profile","userProfileUpdated","Label","text","CustomFormGroup","inputType","EditProfilePage","changePasswordBtnClicked","setChangePasswordBtnClicked","Log","deleteTimeLog","Logs","logs","monthValue","setMonthValue","JSON","stringify","year","month","created_by","LogsPage","HomePage","NotFound","notFound","notFound_box","Logout","logout","UserPage","ReportFilterForm","monthFirstDate","start_date","setStartDate","end_date","setEndDate","setCompany","is_superuser","find","item","name","filterData","logReport","BuildReport","date_range","bordered","hover","striped","SingleUserData","isOpen","setIsOpen","cursor","onMouseDown","total","time","dateDate","colSpan","ReportResult","ReportPage","Routes","path","component","LoginPage","LogoutPage","NotFoundPage","GuestRoute","Component","rest","render","pathname","from","PrivateRoute","App","initialState","usersLoading","adminReducer","action","authReducer","logsLoadError","timeLogReducer","userProfileInformation","userProfileReducer","rootReducer","combineReducers","composers","applyMiddleware","thunk","store","createStore","compose","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.4fc4e419.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"footerNav\":\"styles_footerNav__2OE4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"styles_notFound__22mFc\",\"notFound_box\":\"styles_notFound_box__2vfwi\"};","export function getHeaders(additional) {\r\n  const timeLoggerUserToken = localStorage.getItem(\"timeLoggerUserToken\");\r\n\r\n  if (!timeLoggerUserToken)\r\n    return {\r\n      ...additional,\r\n    };\r\n\r\n  return {\r\n    Authorization: `Token ${timeLoggerUserToken}`,\r\n    ...additional,\r\n  };\r\n}\r\n\r\nexport function createUUID() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : r && 0x3 | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function formatUserName(user) {\r\n  let name = \"\";\r\n\r\n  if (user.first_name) {\r\n    name += user.first_name + \" \";\r\n  }\r\n  if (user.last_name) {\r\n    name += user.last_name + \" \";\r\n  }\r\n  if (!user.first_name && !user.last_name) {\r\n    name = user.username;\r\n  }\r\n  if (name) {\r\n    name = name.trim();\r\n  }\r\n  return name;\r\n}\r\n\r\n\r\nexport const getLast5Year = () => {\r\n    let todayDate = new Date()\r\n    const years = []\r\n    for (let i=0; i < 5; i++){\r\n        years.push(todayDate.getFullYear() - i)\r\n    }\r\n    return years\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE\r\n})\r\n\r\nexport default instance\r\n\r\n","// auth action types\r\n// user\r\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const USER_LOGIN_ERROR = \"USER_LOGIN_ERROR\";\r\n\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_REGISTER_ERROR = \"USER_REGISTER_ERROR\";\r\n\r\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\r\n\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\n\r\nexport const USER_INFO_LOADED = \"USER_INFO_LOADED\";\r\nexport const USER_INFO_LOAD_ERROR = \"USER_INFO_LOAD_ERROR\";\r\n\r\n\r\n// time logs\r\nexport const TIME_LOGS_LOADED = \"TIME_LOGS_LOADED\"\r\nexport const TIME_LOGS_LOAD_ERROR = \"TIME_LOGS_LOAD_ERROR\"\r\nexport const TIME_LOGS_LOADING = \"TIME_LOGS_LOADING\"\r\nexport const TIME_LOG_SAVED = \"TIME_LOG_SAVED\"\r\nexport const TIME_LOG_SAVE_ERROR = \"TIME_LOG_SAVE_ERROR\"\r\n\r\nexport const TIME_LOG_LOADED = \"TIME_LOG_LOADED\" // for single log\r\nexport const TIME_LOG_LOAD_ERROR = \"TIME_LOG_LOAD_ERROR\"\r\nexport const TIME_LOG_LOADING = \"TIME_LOG_LOADING\"\r\n\r\n// log report\r\nexport const LOG_REPORT_LOADING = \"LOG_REPORT_LOADING\"\r\nexport const LOG_REPORT_LOADED = \"LOG_REPORT_LOADED\"\r\nexport const LOG_REPORT_LOAD_ERROR = \"LOG_REPORT_LOAD_ERROR\"\r\n\r\n// user\r\nexport const USERS_LOADING = \"USERS_LOADING\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERS_LOAD_ERROR = \"USERS_LOAD_ERROR\";\r\n\r\n// user profile\r\nexport const USER_PROFILE_LOADING = \"USER_PROFILE_LOADING\";\r\nexport const USER_PROFILE_INFORMATION_LOADED = \"USER_PROFILE_INFORMATION_LOADED\";\r\nexport const USER_PROFILE_INFORMATION_LOAD_ERROR = \"USER_PROFILE_INFORMATION_LOAD_ERROR\";\r\nexport const USER_PROFILE_UPDATED = \"USER_PROFILE_UPDATED\";\r\nexport const USER_PROFILE_UPDATE_ERROR = \"USER_PROFILE_UPDATE_ERROR\";\r\n\r\nexport const USER_PASSWORD_UPDATED = \"USER_PASSWORD_UPDATED\";\r\nexport const USER_PASSWORD_UPDATE_ERROR = \"USER_PASSWORD_UPDATE_ERROR\";\r\n\r\nexport const COMPANY_DATA_LOADING = \"COMPANY_DATA_LOADING\"\r\nexport const COMPANY_DATA_LOADED = \"COMPANY_DATA_LOADED\"\r\nexport const COMPANY_DATA_LOAD_ERROR = \"COMPANY_DATA_LOAD_ERROR\"","import { getHeaders } from \"../../utils\";\r\nimport axios from \"../../utils/axios\";\r\nimport * as Types from \"./actionTypes\";\r\n\r\n\r\nexport const login = (loginCreds, history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_LOGIN_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/login/\", loginCreds)\r\n    .then((res) => {\r\n        // console.log(res.data);\r\n        localStorage.setItem(\"timeLoggerUserToken\", res.data.token);\r\n      dispatch({ type: Types.USER_LOGGED_IN });\r\n      history.push(\"/\");\r\n      dispatch(loadUserInfo());\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_LOGIN_ERROR,\r\n        payload: error.response ? error.response.data : {},\r\n      });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const register = (registerData, history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_REGISTER_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/register/\", registerData)\r\n    .then((res) => {\r\n      localStorage.setItem(\"timeLoggerUserToken\", res.data.key);\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n      dispatch({ type: Types.USER_REGISTERED });\r\n      history.push(\"/\");\r\n      dispatch(loadUserInfo());\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_REGISTER_ERROR,\r\n        payload: error.response ? error.response.data : {},\r\n      });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const logout = (history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  localStorage.removeItem(\"timeLoggerUserToken\");\r\n  dispatch({ type: Types.USER_LOGGED_OUT });\r\n  dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n  history.push(\"/\");\r\n};\r\n\r\nexport const loadUserInfo = () => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n\r\n  axios\r\n    .get(\"/auth/user/me/\", { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n      dispatch({ type: Types.USER_LOGGED_IN, payload: res.data });\r\n    })\r\n    .catch((error) => {\r\n      localStorage.removeItem(\"timeLoggerUserToken\");\r\n      dispatch({ type: Types.USER_LOGGED_OUT });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n\r\n\r\nexport const loadAllCompanies = () => dispatch => {\r\n  dispatch({type: Types.COMPANY_DATA_LOADING, payload: true})\r\n  axios.get(\"/auth/companies/\", {headers: getHeaders()})\r\n  .then(res => {\r\n    // console.log(res.data);\r\n    dispatch({type: Types.COMPANY_DATA_LOADED, payload: res.data})\r\n    dispatch({type: Types.COMPANY_DATA_LOADING, payload: false})\r\n  })\r\n  .catch(error => {\r\n    // console.log(error.response.data);\r\n    dispatch({type: Types.COMPANY_DATA_LOAD_ERROR, payload: \"Error loading company's data\"})\r\n    dispatch({type: Types.COMPANY_DATA_LOADING, payload: false})\r\n  })\r\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\nimport classes from './styles.module.scss'\n\nconst AuthFooter = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <Link\n                  className=\"font-weight-bold ml-1\"\n                  to=\"/\"\n                >\n                  Akkrual\n                </Link>\n              </div>\n            </Col>\n            <Col xl=\"6\">\n              <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                <NavItem>\n                  <NavLink to=\"/\" className={classes.footerNav}>\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to='/about' className={classes.footerNav}>\n                    About Us\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default AuthFooter;\n","import React from 'react';\r\nimport { UncontrolledCollapse, Navbar, Row, Col, NavbarBrand, Nav, NavLink as Link, NavItem, Container } from 'reactstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst site_name = \"Time Logger\"\r\n\r\nconst TopNavBar = (props) => {\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <Navbar color=\"primary\" dark expand=\"md\">\r\n      <Container fluid>\r\n        <NavbarBrand to=\"/\" exact tag={NavLink}>{site_name}</NavbarBrand>\r\n        <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\r\n          <div className=\"navbar-collapse-header d-md-none\">\r\n            <Row>\r\n              <Col className=\"collapse-brand\" xs=\"6\">\r\n                <Link to=\"/\">\r\n                  {site_name}\r\n                </Link>\r\n              </Col>\r\n              <Col className=\"collapse-close\" xs=\"6\">\r\n                <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n                  <span />\r\n                  <span />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            {auth.isAuthenticated ? (\r\n              <>\r\n                {!auth.user.is_company_owner ? (\r\n                  <NavItem>\r\n                    <Link to=\"/create-log\" tag={NavLink}>\r\n                      <i className=\"fa fa-clock\" /> Create Log\r\n                    </Link>\r\n                  </NavItem>\r\n                ) : (\r\n                  <NavItem>\r\n                    <Link to=\"/report\" tag={NavLink}>\r\n                      <i className=\"fa fa-file\" /> Report\r\n                    </Link>\r\n                  </NavItem>\r\n                )}\r\n                \r\n                <NavItem>\r\n                  <Link to=\"/edit-profile\" tag={NavLink}>\r\n                    <i className=\"fa fa-user\" /> Profile\r\n                  </Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/logout\" tag={NavLink}>\r\n                    <i className=\"fas fa-sign-out-alt\" /> Logout\r\n                  </Link>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavItem>\r\n                  <Link to=\"/login\" tag={NavLink}>\r\n                    <i className=\"fa fa-user\" /> Login\r\n                    </Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/register\" tag={NavLink}>\r\n                    <i className=\"fa fa-user\" /> Register\r\n                    </Link>\r\n                </NavItem>\r\n              </>\r\n            )}\r\n          </Nav>\r\n        </UncontrolledCollapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopNavBar;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container, Row } from \"reactstrap\";\nimport AuthFooter from \"../Footers/AuthFooter\";\nimport TopNavBar from \"../Navbars/TopNavBar\";\n\nconst AuthLayout = (props) => {\n    const mainContent = React.useRef(null);\n    const location = useLocation();\n\n    React.useEffect(() => {\n        document.body.classList.add(\"bg-default\");\n        return () => {\n            document.body.classList.remove(\"bg-default\");\n        };\n    }, []);\n    React.useEffect(() => {\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        mainContent.current.scrollTop = 0;\n    }, [location]);\n\n    return (\n        <>\n            <div className=\"main-content\" ref={mainContent}>\n                <TopNavBar />\n                <div className=\"header bg-gradient-info py-7 py-lg-8\">\n                    <div className=\"separator separator-bottom separator-skew zindex-100\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            preserveAspectRatio=\"none\"\n                            version=\"1.1\"\n                            viewBox=\"0 0 2560 100\"\n                            x=\"0\"\n                            y=\"0\"\n                        >\n                            <polygon\n                                className=\"fill-default\"\n                                points=\"2560 0 2560 100 0 100\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n                {/* Page content */}\n                <Container className=\"mt--8 pb-5\">\n                    <Row className=\"justify-content-center\">\n                        {props.children}\n                    </Row>\n                </Container>\n            </div>\n            <AuthFooter />\n        </>\n    );\n};\n\nexport default AuthLayout;\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../store/actions/authActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthLayout from '../../components/layouts/AuthLayout'\r\nimport { Button, Card, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\r\n\r\nconst SignIn = ({ history }) => {\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({ username, password }, history));\r\n    };\r\n\r\n    return (\r\n        <AuthLayout>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center text-muted mb-4\">\r\n                            <h2>Login to your account</h2>\r\n                        </div>\r\n                        <Form role=\"form\" onSubmit={submitHandler}>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Username or Email\"\r\n                                        type=\"text\"\r\n                                        value={username}\r\n                                        onChange={e => setUsername(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {auth.loginErrors.error && (\r\n                                <small style={{color: 'red'}}>{auth.loginErrors.error}</small>\r\n                            )}\r\n                            <div className=\"text-center\">\r\n                                <Button disabled={auth.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                                    {auth.loading ? \"Please wait...\": \"Sign In\"}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"mt-3\">\r\n                    <Col xs=\"6\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/fp\"\r\n                        >\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"6\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/register\"\r\n                        >\r\n                            Create new account\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </AuthLayout>\r\n    );\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../../store/actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthLayout from \"../../components/layouts/AuthLayout\";\r\nimport { Button, Card, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    // states\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [first_name, setFirstName] = useState(\"\");\r\n    const [last_name, setLastName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // handlers\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const registerData = {\r\n            email,\r\n            password1,\r\n            password2,\r\n            username,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n        };\r\n        dispatch(register(registerData, history));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!!auth.registerErrors.non_field_errors) {\r\n            setMessage(auth.registerErrors.non_field_errors[0]);\r\n        }\r\n    }, [auth]);\r\n\r\n    return (\r\n        <AuthLayout>\r\n            <Col lg=\"6\" md=\"8\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center text-muted mb-4\">\r\n                            <h2>Create a new Account</h2>\r\n                        </div>\r\n                        <Form role=\"form\" onSubmit={submitHandler}>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    \r\n                                    <Input\r\n                                        placeholder=\"Username\"\r\n                                        type=\"text\"\r\n                                        value={username}\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.username && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.username[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-email-83\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        placeholder=\"Email\"\r\n                                        autoComplete=\"new-email\"\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.email && (\r\n                                    <small style={{ color: \"red\" }}>{auth.registerErrors.email[0]}</small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"new-password\"\r\n                                        value={password1}\r\n                                        onChange={e => setPassword1(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.password1 && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.password1[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Confirm Password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"new-password\"\r\n                                        value={password2}\r\n                                        onChange={e => setPassword2(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.password2 && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.password2[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"text\"\r\n                                        value={first_name}\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                    <Input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"text\"\r\n                                        value={last_name}\r\n                                        onChange={(e) => setLastName(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.first_name && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.first_name[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-mobile-button\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={(e) => setPhone(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.phone && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.phone[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            {message && (\r\n                                <small style={{color: 'red'}}>{message}</small>\r\n                            )}\r\n                            <div className=\"text-center\">\r\n                                <Button disabled={auth.loading} className=\"mt-4\" color=\"primary\" type=\"submit\">\r\n                                    {auth.loading ? \"Please wait...\" : \"Create account\" }\r\n                                </Button>\r\n                            </div>\r\n                            \r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\" xs=\"12\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/login\"\r\n                        >\r\n                            Already have an account? Login Here\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </AuthLayout>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"./actionTypes\";\r\n\r\nexport const loadLogs = (filter) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n\r\n  const method = filter ? \"post\" : \"get\";\r\n  axios({\r\n    method: method,\r\n    url: \"/time/logs/\",\r\n    data: filter,\r\n    headers: getHeaders(),\r\n  })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADED, payload: res.data });\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: Types.TIME_LOGS_LOAD_ERROR,\r\n        payload: error.response\r\n          ? error.response.data\r\n          : { message: \"Something went wrong\" },\r\n      });\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const createTimeLog = (data) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n  dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/time/logs/create/\", data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n      dispatch({ type: Types.TIME_LOG_SAVED, payload: true });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      if (error.response && error.response.data.duration) {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: { message: \"Duration must be less than or equal 24 hours\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: error.response\r\n            ? error.response.data\r\n            : { message: \"Something went wrong\" },\r\n        });\r\n      }\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const deleteTimeLog = (logId) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  axios\r\n    .delete(`/time/logs/${logId}`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch(loadLogs());\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n};\r\n\r\nexport const updateTimeLog = (logId, data) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n  dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n  axios\r\n    .put(`/time/logs/${logId}/`, data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n      dispatch({ type: Types.TIME_LOG_SAVED, payload: true });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      if (error.response && error.response.data.duration) {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: { message: \"Duration must be less than or equal 24 hours\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: error.response\r\n            ? error.response.data\r\n            : { message: \"Something went wrong\" },\r\n        });\r\n      }\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const loadSingleLog = (logId) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOG_LOADING, payload: true });\r\n  axios\r\n    .get(`/time/logs/${logId}`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      //   console.log(res.data);\r\n      dispatch({ type: Types.TIME_LOG_LOADED, payload: res.data });\r\n      dispatch({ type: Types.TIME_LOG_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      //   console.log(error.response);\r\n      dispatch({\r\n        type: Types.TIME_LOG_LOAD_ERROR,\r\n        payload: error.response\r\n          ? error.response.data\r\n          : { detail: \"Something went wrong\" },\r\n      });\r\n      dispatch({ type: Types.TIME_LOG_LOADING, payload: false });\r\n    });\r\n};\r\n\r\n\r\nexport const getLogReport = (filterData) => dispatch => {\r\n  // report download\r\n  dispatch({type: Types.LOG_REPORT_LOADING, payload: true})\r\n\r\n  axios.post(\"/time/log/report/\", filterData, {headers: getHeaders()})\r\n  .then(res => {\r\n    // console.log(res.data);\r\n    dispatch({type: Types.LOG_REPORT_LOADED, payload: res.data})\r\n    dispatch({type: Types.LOG_REPORT_LOADING, payload: false})\r\n  })\r\n  .catch(error => {\r\n    // console.log(error.response);\r\n    dispatch({type: Types.LOG_REPORT_LOADING, payload: false})\r\n    dispatch({type: Types.LOG_REPORT_LOAD_ERROR, payload: \"Failed to get report\"})\r\n  })\r\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classes from './styles.module.scss'\n\nimport { Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst AdminFooter = () => {\n  return (\n    <footer className=\"footer\">\n      <Row className=\"align-items-center justify-content-xl-between\">\n        <Col xl=\"6\">\n          <div className=\"copyright text-center text-xl-left text-muted\">\n            © {new Date().getFullYear()}{\" \"}\n            <Link\n              className=\"font-weight-bold ml-1\"\n              to=\"/\"\n              rel=\"noopener noreferrer\"\n            >\n              Akkrual\n            </Link>\n          </div>\n        </Col>\n\n        <Col xl=\"6\">\n          <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n            <NavItem>\n              <NavLink\n                className={classes.footerNav}\n                to=\"/\"\n                rel=\"noopener noreferrer\"\n              >\n                Home\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                to=\"/about\"\n                rel=\"noopener noreferrer\"\n                className={classes.footerNav}\n              >\n                About Us\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Col>\n      </Row>\n    </footer>\n  );\n};\n\nexport default AdminFooter;\n","import React from 'react'\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminFooter from \"../Footers/AdminFooter\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TopNavBar from '../Navbars/TopNavBar';\r\n\r\n\r\nconst DashboardLayout = ({ props, children }) => {\r\n  const mainContent = React.useRef(null);\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"main-content\" ref={mainContent}>\r\n      <TopNavBar />\r\n      {children}\r\n      <Container fluid>\r\n        <AdminFooter />\r\n      </Container>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default DashboardLayout","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createTimeLog } from '../../store/actions/timeLogActions'\r\nimport moment from 'moment';\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout';\r\nimport {\r\n  Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n  InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport * as Types from '../../store/actions/actionTypes'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LogForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const timeLog = useSelector(state => state.timeLog)\r\n  const auth = useSelector(state => state.auth)\r\n  const todayDate = moment().format(\"YYYY-MM-DD\");\r\n\r\n  // states\r\n  const [date, setDate] = useState(todayDate)\r\n  const [hour, setHour] = useState(\"\")\r\n  const [minute, setMinute] = useState(\"\")\r\n  const [injury_noted, setInjuryNoted] = useState(false)\r\n  const [policy_violation_noted, setPolicyViolationNoted] = useState(false)\r\n  const [comment, setComment] = useState(\"\")\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault()\r\n    const duration = (parseInt(hour || 0) * 60) + parseInt(minute || 0)\r\n    dispatch(createTimeLog({ date, duration, injury_noted, policy_violation_noted, comment }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n    dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col lg=\"5\" md=\"7\">\r\n            <Card className=\"bg-secondary shadow border-0\">\r\n              <CardBody className=\"px-lg-5 py-lg-5\">\r\n                <div className=\"text-center text-muted mb-4\">\r\n                  <h2><Link to=\"/\">Go Back</Link> &raquo; Log Time</h2>\r\n                </div>\r\n                {auth.user.is_company_owner ? (\r\n                  <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>  \r\n                ): (\r\n                <Form onSubmit={submitHandler}>\r\n                  <FormGroup className=\"mb-3\">\r\n                    <InputGroup className=\"input-group-alternative\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"far fa-calendar\" />\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Date\"\r\n                        type=\"date\"\r\n                        max={moment().format(\"YYYY-MM-DD\")}\r\n                        value={date}\r\n                        onChange={e => setDate(e.target.value)}\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <InputGroup className=\"input-group-alternative\">\r\n                      <InputGroupAddon addonType=\"prepend\">\r\n                        <InputGroupText>\r\n                          <i className=\"far fa-clock\" />\r\n                        </InputGroupText>\r\n                      </InputGroupAddon>\r\n                      <Input\r\n                        placeholder=\"Hours\"\r\n                        value={hour}\r\n                        type=\"text\"\r\n                        onChange={e => setHour(e.target.value.replace(/[^0-9]/g, '').replace(/2[4-9]|[3-9]\\d+|[1-9]\\d{2,}/g, '23'))}\r\n                      />\r\n                      <Input\r\n                        placeholder=\"Minutes\"\r\n                        value={minute}\r\n                        type=\"text\"\r\n                        onChange={e => setMinute(e.target.value.replace(/[^0-9]/g, '').replace(/6[0-9]|[7-9]\\d+|[1-9]\\d{2,}/g, '59'))}\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  <FormGroup>\r\n                    <InputGroup className=\"input-group-alternative\">\r\n                      <Input\r\n                        placeholder=\"Comments (Optional)\"\r\n                        value={comment}\r\n                        rows={3}\r\n                        type=\"textarea\"\r\n                        onChange={e => setComment(e.target.value)}\r\n                      />\r\n                    </InputGroup>\r\n                  </FormGroup>\r\n                  <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                    <input\r\n                      className=\"custom-control-input\"\r\n                      id=\"injuriNote\"\r\n                      type=\"checkbox\"\r\n                      checked={injury_noted}\r\n                      onChange={e => setInjuryNoted(e.target.checked)}\r\n                    />\r\n                    <label className=\"custom-control-label\" htmlFor=\"injuriNote\">\r\n                      Were there any injuries noted?\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                    <input\r\n                      className=\"custom-control-input\"\r\n                      id=\"policyNote\"\r\n                      type=\"checkbox\"\r\n                      checked={policy_violation_noted}\r\n                      onChange={e => setPolicyViolationNoted(e.target.checked)}\r\n                    />\r\n                    <label className=\"custom-control-label\" htmlFor=\"policyNote\">\r\n                      Were there any violation of company policy noted?\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                    <input\r\n                      className=\"custom-control-input\"\r\n                      disabled\r\n                      type=\"checkbox\"\r\n                      id=\"companyName\"\r\n                      checked\r\n                    />\r\n                    <label className=\"custom-control-label\" htmlFor=\"companyName\">\r\n                      Company: {auth.user.company}\r\n                    </label>\r\n                  </div>\r\n\r\n                  {timeLog.createLogError && (\r\n                    <small style={{ color: 'red' }}>{timeLog.createLogError}</small>\r\n                  )}\r\n                  <div className=\"text-center\">\r\n                    {timeLog.logSaved && (\r\n                      <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                        Log saved successfully! <Link to=\"/\">Go back</Link>\r\n                      </small>\r\n                    )}\r\n                    {timeLog.logSaveError && (\r\n                      <small style={{ color: 'red', fontWeight: 'bold' }}>{timeLog.logSaveError}</small>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <Button disabled={timeLog.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                      {timeLog.loading ? \"Saving...\" : \"Save\"}\r\n                    </Button>\r\n                  </div>\r\n                </Form>\r\n                )}\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default LogForm","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateTimeLog, loadSingleLog } from '../../store/actions/timeLogActions'\r\nimport moment from 'moment';\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout';\r\nimport {\r\n  Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n  InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport * as Types from '../../store/actions/actionTypes'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditLog = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n  const timeLog = useSelector(state => state.timeLog)\r\n  const auth = useSelector(state => state.auth)\r\n  const todayDate = moment().format(\"YYYY-MM-DD\");\r\n\r\n  const logId = match.params.logId;\r\n\r\n  // load the log\r\n  useEffect(() => {\r\n    dispatch(loadSingleLog(logId))\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (Object.keys(timeLog.singleLog).length > 0) {\r\n      setDate(timeLog.singleLog.date)\r\n      setHour(parseInt(timeLog.singleLog.duration / 60))\r\n      setMinute(timeLog.singleLog.duration % 60)\r\n      setInjuryNoted(timeLog.singleLog.injury_noted)\r\n      setPolicyViolationNoted(timeLog.singleLog.policy_violation_noted)\r\n      setComment(timeLog.singleLog.comment)\r\n    }\r\n  }, [timeLog.singleLog])\r\n\r\n  // states\r\n  const [date, setDate] = useState(todayDate)\r\n  const [hour, setHour] = useState(\"\")\r\n  const [minute, setMinute] = useState(\"\")\r\n  const [injury_noted, setInjuryNoted] = useState(false)\r\n  const [policy_violation_noted, setPolicyViolationNoted] = useState(false)\r\n  const [comment, setComment] = useState(\"\")\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault()\r\n    const duration = (parseInt(hour || 0) * 60) + parseInt(minute || 0)\r\n    const requestData = { date, duration, injury_noted, policy_violation_noted, comment }\r\n    dispatch(updateTimeLog(logId, requestData))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n    dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n    dispatch({ type: Types.TIME_LOG_LOAD_ERROR, payload: {} });\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col lg=\"5\" md=\"7\">\r\n            <Card className=\"bg-secondary shadow border-0\">\r\n              <CardBody className=\"px-lg-5 py-lg-5\">\r\n                <div className=\"text-center text-muted mb-4\">\r\n                  <h2><Link to=\"/\">Go Back</Link> &raquo; Edit Log</h2>\r\n                </div>\r\n                {timeLog.singleLogLoading ? (\r\n                  <h4 className=\"text-center\">\r\n                    Loading... Please wait!\r\n                  </h4>\r\n                ) : (\r\n                  <>\r\n                    {timeLog.singleLogLoadError ? (\r\n                      <h4 className=\"text-center\" style={{ color: 'red', fontWeight: 'bold' }}>\r\n                        {timeLog.singleLogLoadError}\r\n                      </h4>\r\n                    ) : (\r\n                      <Form role=\"form\" onSubmit={submitHandler}>\r\n                        <FormGroup className=\"mb-3\">\r\n                          <InputGroup className=\"input-group-alternative\">\r\n                            <InputGroupAddon addonType=\"prepend\">\r\n                              <InputGroupText>\r\n                                <i className=\"far fa-calendar\" />\r\n                              </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input\r\n                              placeholder=\"Date\"\r\n                              type=\"date\"\r\n                              max={moment().format(\"YYYY-MM-DD\")}\r\n                              value={date}\r\n                              onChange={e => setDate(e.target.value)}\r\n                            />\r\n                          </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <InputGroup className=\"input-group-alternative\">\r\n                            <InputGroupAddon addonType=\"prepend\">\r\n                              <InputGroupText>\r\n                                <i className=\"far fa-clock\" />\r\n                              </InputGroupText>\r\n                            </InputGroupAddon>\r\n                            <Input\r\n                              placeholder=\"Hours\"\r\n                              value={hour}\r\n                              type=\"text\"\r\n                              onChange={e => setHour(e.target.value.replace(/[^0-9]/g, '').replace(/2[4-9]|[3-9]\\d+|[1-9]\\d{2,}/g, '23'))}\r\n                            />\r\n                            <Input\r\n                              placeholder=\"Minutes\"\r\n                              value={minute}\r\n                              type=\"text\"\r\n                              onChange={e => setMinute(e.target.value.replace(/[^0-9]/g, '').replace(/6[0-9]|[7-9]\\d+|[1-9]\\d{2,}/g, '59'))}\r\n                            />\r\n                          </InputGroup>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                          <InputGroup className=\"input-group-alternative\">\r\n\r\n                            <Input\r\n                              placeholder=\"Comments (Optional)\"\r\n                              value={comment}\r\n                              rows={3}\r\n                              type=\"textarea\"\r\n                              onChange={e => setComment(e.target.value)}\r\n                            />\r\n                          </InputGroup>\r\n                        </FormGroup>\r\n                        <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            id=\"injuriNote\"\r\n                            type=\"checkbox\"\r\n                            checked={injury_noted}\r\n                            onChange={e => setInjuryNoted(e.target.checked)}\r\n                          />\r\n                          <label className=\"custom-control-label\" htmlFor=\"injuriNote\">\r\n                            Were there any injuries noted?\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            id=\"policyNote\"\r\n                            type=\"checkbox\"\r\n                            checked={policy_violation_noted}\r\n                            onChange={e => setPolicyViolationNoted(e.target.checked)}\r\n                          />\r\n                          <label className=\"custom-control-label\" htmlFor=\"policyNote\">\r\n                            Were there any violation of company policy noted?\r\n                          </label>\r\n                        </div>\r\n\r\n                        <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                          <input\r\n                            className=\"custom-control-input\"\r\n                            disabled\r\n                            type=\"checkbox\"\r\n                            id=\"companyName\"\r\n                            checked\r\n                          />\r\n                          <label className=\"custom-control-label\" htmlFor=\"companyName\">\r\n                            Company: {auth.user.company}\r\n                          </label>\r\n                        </div>\r\n\r\n                        {timeLog.createLogError && (\r\n                          <small style={{ color: 'red' }}>{timeLog.createLogError}</small>\r\n                        )}\r\n                        <div className=\"text-center\">\r\n                          {timeLog.logSaved && (\r\n                            <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                              Log saved successfully! <Link to=\"/\">Go back</Link>\r\n                            </small>\r\n                          )}\r\n                          {timeLog.logSaveError && (\r\n                            <small style={{ color: 'red', fontWeight: 'bold' }}>{timeLog.logSaveError}</small>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <Button disabled={timeLog.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                            {timeLog.loading ? \"Saving...\" : \"Save\"}\r\n                          </Button>\r\n                        </div>\r\n                      </Form>\r\n                    )}\r\n                  </>\r\n                )}\r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default EditLog","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"../actions/actionTypes\";\r\n\r\nexport const deleteUser = (userId) => (dispatch) => {\r\n  dispatch({ type: Types.USERS_LOADING, payload: true });\r\n  axios\r\n    .delete(`/auth/user/${userId}/`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch(loadUsers())\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n};\r\n\r\nexport const loadUsers = () => (dispatch) => {\r\n  dispatch({ type: Types.USERS_LOADING, payload: true });\r\n  axios\r\n    .get(\"/time/users\", { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.USERS_LOADED, payload: res.data });\r\n      dispatch({ type: Types.USERS_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: Types.USERS_LOADING, payload: false });\r\n    });\r\n};\r\n","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { deleteUser } from \"../../../store/actions/adminActions\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst User = ({ user }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteHandle = userId => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure to delete this user?',\r\n      buttons: [\r\n        {\r\n          label: 'Cancel'\r\n        },\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => dispatch(deleteUser(userId))\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\" className=\"text-center\">{user.id}</th>\r\n      <th className=\"text-center\">{user.username}</th>\r\n      <td className=\"text-center\">{user.email}</td>\r\n      <td className=\"text-center\">{user.duration}</td>\r\n      <td className=\"text-center\">\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"sm\"\r\n          tag={Link}\r\n          to={`/user/${user.id}`}\r\n        >\r\n          <i className=\"fa fa-eye\"></i>\r\n        </Button>\r\n        <Button\r\n          color=\"danger\"\r\n          size=\"sm\"\r\n          className=\"ml-3\"\r\n          onClick={() => deleteHandle(user.id)}\r\n        >\r\n          <i className=\"fa fa-trash\"></i>\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default User","import React from 'react'\r\nimport { Table } from \"reactstrap\";\r\nimport { createUUID } from '../../../utils'\r\nimport User from './User';\r\n\r\n\r\nconst Users = ({ users, loading }) => {\r\n  return (\r\n    <div>\r\n      {loading ? <h4 className=\"text-center pb-3\">Loading...</h4> : (\r\n        <Table className=\"align-items-center table-flush\" responsive>\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"text-center\">User ID</th>\r\n              <th scope=\"col\" className=\"text-center\">Username</th>\r\n              <th scope=\"col\" className=\"text-center\">Email</th>\r\n              <th scope=\"col\" className=\"text-center\">This Month Total Time</th>\r\n              <th scope=\"col\" className=\"text-center\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map(user => <User key={createUUID()} user={user} />)}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Users","import React, { useEffect } from \"react\";\r\nimport { Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport DashboardLayout from '../../../components/layouts/DashboardLayout'\r\nimport { loadUsers } from '../../../store/actions/adminActions'\r\nimport Users from \"./Users\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UsersPage = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const admin = useSelector(state => state.admin)\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  useEffect(() => {\r\n      dispatch(loadUsers())\r\n      // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"mt-5\">\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\"><Link to=\"/\">Go Back</Link> &raquo; Users</h3>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n                \r\n              {auth.user.is_company_owner ? (\r\n                <Users users={admin.users} loading={admin.loading} />\r\n              ) : (\r\n                <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default UsersPage;\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n    InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updatePassword } from '../../store/actions/userProfileActions'\r\n\r\nconst UpdatePasswordForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userProfile = useSelector(state => state.userProfile)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n        dispatch(updatePassword({ old_password, new_password1, new_password2 }))\r\n    }\r\n\r\n    // states\r\n    const [old_password, setOldPassword] = useState(\"\")\r\n    const [new_password1, setNewPassword1] = useState(\"\")\r\n    const [new_password2, setNewPassword2] = useState(\"\")\r\n\r\n    return (\r\n        <Container className=\"my-5\" fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col lg=\"5\" md=\"7\">\r\n                    <Card className=\"bg-secondary shadow border-0\">\r\n                        <CardBody className=\"px-lg-5 py-lg-5\">\r\n                            <div className=\"text-center text-muted mb-4\">\r\n                                <h2>Change Password</h2>\r\n                            </div>\r\n                            <Form role=\"form\" onSubmit={submitHandler}>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"Old Password\"\r\n                                            type=\"password\"\r\n                                            value={old_password}\r\n                                            onChange={e => setOldPassword(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.old_password && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.old_password[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"New Password\"\r\n                                            value={new_password1}\r\n                                            onChange={e => setNewPassword1(e.target.value)}\r\n                                            type=\"password\"\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.new_password1 && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.new_password1[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={new_password2}\r\n                                            type=\"password\"\r\n                                            onChange={e => setNewPassword2(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.new_password2 && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.new_password2[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                {userProfile.userPasswordUpdated && (\r\n                                    <div className=\"text-center\">\r\n                                        <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                                            Password updated successfully!\r\n                                        </small>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"text-center\">\r\n                                    <Button disabled={userProfile.loading} className=\"my-3\" color=\"primary\" type=\"submit\">\r\n                                        {userProfile.loading ? \"Updating...\" : \"Update Password\"}\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default UpdatePasswordForm","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"./actionTypes\";\r\nimport { loadUserInfo } from \"./authActions\";\r\n\r\nexport const loadUserProfileInformation = (userId) => (dispatch) => {\r\n  axios\r\n    .get(`/auth/user/${userId}/`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: Types.USER_PROFILE_INFORMATION_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_PROFILE_INFORMATION_LOAD_ERROR,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\n\r\nexport const updateProfile = (userId, profileData) => (dispatch) => {\r\n  dispatch({ type: Types.USER_PROFILE_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_PROFILE_UPDATE_ERROR, payload: {} });\r\n  axios\r\n    .put(`/auth/user/${userId}/`, profileData, { headers: getHeaders() })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({ type: Types.USER_PROFILE_UPDATED, payload: res.data });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n      dispatch(loadUserInfo())\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_PROFILE_UPDATE_ERROR,\r\n        payload: error.response.data,\r\n      });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const updatePassword = (data) => (dispatch) => {\r\n  dispatch({ type: Types.USER_PROFILE_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_PASSWORD_UPDATE_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/password/change/\", data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.USER_PASSWORD_UPDATED });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n      dispatch({\r\n        type: Types.USER_PASSWORD_UPDATE_ERROR,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, CardBody, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateProfile } from '../../store/actions/userProfileActions'\r\nimport { USER_PROFILE_UPDATE_ERROR } from \"../../store/actions/actionTypes\";\r\n\r\n\r\nconst UpdateProfileForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const userProfile = useSelector(state => state.userProfile)\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  // states\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [first_name, setFirstName] = useState(\"\")\r\n  const [last_name, setLastName] = useState(\"\")\r\n  const [address, setAddress] = useState(\"\")\r\n  const [phone, setPhone] = useState(\"\")\r\n  const [city, setCity] = useState(\"\")\r\n  const [country, setCountry] = useState(\"\")\r\n  const [postal_code, setPostalCode] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    if (auth.user.username) setUsername(auth.user.username)\r\n    if (auth.user.email) setEmail(auth.user.email)\r\n    if (auth.user.first_name) setFirstName(auth.user.first_name)\r\n    if (auth.user.last_name) setLastName(auth.user.last_name)\r\n    if (auth.user.address) setAddress(auth.user.address)\r\n    if (auth.user.phone) setPhone(auth.user.phone)\r\n    if (auth.user.city) setCity(auth.user.city)\r\n    if (auth.user.country) setCountry(auth.user.country)\r\n    if (auth.user.postal_code) setPostalCode(auth.user.postal_code)\r\n  }, [auth.user])\r\n\r\n  useEffect(() => {\r\n    // remove the previous errors and success message\r\n    dispatch({ type: USER_PROFILE_UPDATE_ERROR, payload: {} })\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const data = { username, email, first_name, last_name, address, city, phone, country, postal_code }\r\n    dispatch(updateProfile(auth.user.id, data))\r\n  }\r\n\r\n  return (\r\n\r\n    <CardBody>\r\n      <Form onSubmit={submitHandler}>\r\n        <h6 className=\"heading-small text-muted mb-4\">\r\n          User information\r\n\t\t\t\t</h6>\r\n        <div className=\"pl-lg-4\">\r\n          <Row>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-username\"\r\n                labelText=\"Username\"\r\n                value={username}\r\n                disabled\r\n                hasError={!!userProfile.userProfileUpdateErrors.username}\r\n                errorMsg={userProfile.userProfileUpdateErrors.username}\r\n              />\r\n            </Col>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-email\"\r\n                labelText=\"Email address\"\r\n                value={email}\r\n                disabled\r\n                hasError={!!userProfile.userProfileUpdateErrors.email}\r\n                errorMsg={userProfile.userProfileUpdateErrors.email}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-first-name\"\r\n                labelText=\"First name\"\r\n                value={first_name}\r\n                onChange={setFirstName}\r\n                hasError={!!userProfile.userProfileUpdateErrors.first_name}\r\n                errorMsg={userProfile.userProfileUpdateErrors.first_name}\r\n              />\r\n            </Col>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-last-name\"\r\n                labelText=\"Last name\"\r\n                value={last_name}\r\n                onChange={setLastName}\r\n                hasError={!!userProfile.userProfileUpdateErrors.last_name}\r\n                errorMsg={userProfile.userProfileUpdateErrors.last_name}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        <hr className=\"my-4\" />\r\n\r\n        {/* Address */}\r\n        <h6 className=\"heading-small text-muted mb-4\">\r\n          Contact information\r\n\t\t\t\t</h6>\r\n        <div className=\"pl-lg-4\">\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <CustomFormGroup\r\n                inputId=\"input-address\"\r\n                labelText=\"Address\"\r\n                value={address}\r\n                onChange={setAddress}\r\n                hasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.address)}\r\n                errorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.address)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-phone\"\r\n                labelText=\"Phone\"\r\n                value={phone}\r\n                onChange={setPhone}\r\n                hasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.phone)}\r\n                errorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.phone)}\r\n              />\r\n            </Col>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-city\"\r\n                labelText=\"City\"\r\n                value={city}\r\n                onChange={setCity}\r\n                hasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.city)}\r\n                errorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.city)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-country\"\r\n                labelText=\"Country\"\r\n                value={country}\r\n                onChange={setCountry}\r\n                hasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.country)}\r\n                errorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.country)}\r\n              />\r\n            </Col>\r\n            <Col lg=\"6\">\r\n              <CustomFormGroup\r\n                inputId=\"input-postal-code\"\r\n                labelText=\"Postal code\"\r\n                value={postal_code}\r\n                onChange={setPostalCode}\r\n                hasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.postal_code)}\r\n                errorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.postal_code)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {userProfile.userProfileUpdated && (\r\n          <div className=\"text-center\">\r\n            <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n              Profile updated successfully!\r\n\t\t\t\t\t\t</small>\r\n          </div>\r\n        )}\r\n        {Object.keys(userProfile.userProfileUpdateErrors).length > 0 && (\r\n          <div className=\"text-center\">\r\n            <small style={{ color: 'red', fontWeight: 'bold' }}>\r\n              Couldn't save the information, please try again!\r\n\t\t\t\t\t\t</small>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"text-right\">\r\n          <Button disabled={userProfile.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n            {userProfile.loading ? \"Saving...\" : \"Save\"}\r\n          </Button>\r\n        </div>\r\n      </Form>\r\n    </CardBody>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfileForm\r\n\r\n\r\nconst Label = ({ htmlFor, text }) => {\r\n  return (\r\n    <label\r\n      className=\"form-control-label\"\r\n      htmlFor={htmlFor}\r\n    >\r\n      {text}\r\n    </label>\r\n  )\r\n}\r\n\r\nconst CustomFormGroup = (props) => {\r\n\r\n  const { inputId, labelText, value, onChange, inputType, placeholder, disabled, hasError, errorMsg } = props\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label htmlFor={inputId} text={labelText} />\r\n      <Input\r\n        className=\"form-control-alternative\"\r\n        id={inputId}\r\n        placeholder={placeholder || labelText}\r\n        type={inputType || 'text'}\r\n        value={value}\r\n        disabled={disabled || false}\r\n        onChange={onChange ? e => onChange(e.target.value) : null}\r\n      />\r\n      {hasError && (\r\n        <small style={{ color: \"red\", fontWeight: 'bold' }}>\r\n          {errorMsg}\r\n        </small>\r\n      )}\r\n    </FormGroup>\r\n  )\r\n}","import React, { useState } from \"react\";\nimport { Button, Card, CardHeader, Container, Row, Col } from \"reactstrap\";\nimport DashboardLayout from \"../../components/layouts/DashboardLayout\";\nimport UpdatePasswordForm from \"./UpdatePasswordForm\";\nimport UpdateProfileForm from \"./UpdateProfileForm\";\n\nconst EditProfilePage = () => {\n  const [changePasswordBtnClicked, setChangePasswordBtnClicked] = useState(false)\n\n  return (\n    <DashboardLayout>\n      {/* Page content */}\n      <Container className=\"mt-5\" fluid>\n        <Row>\n          <Col className=\"order-xl-1\">\n            <Card className=\"bg-secondary shadow\">\n              <CardHeader className=\"bg-white border-0\">\n                <Row className=\"align-items-center\">\n                  <Col xs=\"8\">\n                    <h3 className=\"mb-0\">\n                      {changePasswordBtnClicked ? \"Change Password\" : \"My account\"}\n                    </h3>\n                  </Col>\n                  <Col className=\"text-right\" xs=\"4\">\n                    <Button\n                      color={changePasswordBtnClicked ? \"danger\" : \"primary\"}\n                      onClick={() => setChangePasswordBtnClicked(!changePasswordBtnClicked)}\n                      size=\"sm\"\n                    >\n                      {changePasswordBtnClicked ? \"Cancel\" : \"Change Password\"}\n                    </Button>\n                  </Col>\n                </Row>\n              </CardHeader>\n              {changePasswordBtnClicked ? <UpdatePasswordForm /> : <UpdateProfileForm />}\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </DashboardLayout>\n  );\n};\n\nexport default EditProfilePage;","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { deleteTimeLog } from \"../../store/actions/timeLogActions\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Log = ({ log }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const deleteHandle = logId => {\r\n    confirmAlert({\r\n      title: 'Confirm to delete',\r\n      message: 'Are you sure to delete this log?',\r\n      buttons: [\r\n        {\r\n          label: 'Cancel'\r\n        },\r\n        {\r\n          label: 'Yes',\r\n          onClick: () => dispatch(deleteTimeLog(logId))\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n  return (\r\n    <tr>\r\n      <th scope=\"row\" className=\"text-center\">{log.date}</th>\r\n      <td className=\"text-center\">{log.duration}</td>\r\n      <td className=\"text-center\">{log.injury_noted ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}</td>\r\n      <td className=\"text-center\">{log.policy_violation_noted ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}</td>\r\n      <td className=\"text-center\">{log.comment || \"N/A\"}</td>\r\n      <td className=\"text-center\">\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"sm\"\r\n          to={`/log/update/${log.id}`}\r\n          tag={Link}\r\n        >\r\n          <i className=\"fa fa-edit\"></i>\r\n        </Button>\r\n        <Button\r\n          color=\"danger\"\r\n          size=\"sm\"\r\n          className=\"ml-3\"\r\n          onClick={() => deleteHandle(log.id)}\r\n        >\r\n          <i className=\"fa fa-trash\"></i>\r\n        </Button>\r\n      </td>\r\n    </tr>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Log","import React from 'react'\r\nimport { createUUID } from '../../utils'\r\nimport Log from './Log'\r\nimport { Table } from \"reactstrap\";\r\n\r\n\r\nconst Logs = ({ logs, loading }) => {\r\n\r\n  return (\r\n    <div>\r\n      {loading ? <h4 className=\"text-center pb-3\">Loading...</h4> : (\r\n        <Table className=\"align-items-center table-flush\" responsive>\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\" className=\"text-center\">Date</th>\r\n              <th scope=\"col\" className=\"text-center\">Duration</th>\r\n              <th scope=\"col\" className=\"text-center\">Injuries Noted</th>\r\n              <th scope=\"col\" className=\"text-center\">Violations noted</th>\r\n              <th scope=\"col\" className=\"text-center\">Comments</th>\r\n              <th scope=\"col\" className=\"text-center\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logs.map(log => <Log key={createUUID()} log={log} />)}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default Logs\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loadLogs } from '../../store/actions/timeLogActions';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst MonthPicker = ({ match }) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const [monthValue, setMonthValue] = useState(moment().format(\"YYYY-MM\"))\r\n\r\n  const handleChange = e => {\r\n    const value = e.target.value\r\n    if (JSON.stringify(value) !== JSON.stringify(monthValue)) {\r\n      const date = moment(value)\r\n      let filter = { year: date.year(), month: date.month() + 1 }\r\n      if (match.params.userId) {\r\n        filter = { ...filter, created_by: match.params.userId }\r\n      }\r\n      dispatch(loadLogs(filter))\r\n    }\r\n    setMonthValue(value)\r\n  }\r\n\r\n  return (\r\n    <div className=\"col text-right\">\r\n      <h3 className=\"mb-0\">\r\n        <input\r\n          type=\"month\"\r\n          value={monthValue}\r\n          max={moment().format(\"YYYY-MM\")}\r\n          onChange={handleChange}\r\n        />\r\n      </h3>\r\n    </div>\r\n\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(MonthPicker)\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout'\r\nimport Logs from \"./Logs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadLogs } from '../../store/actions/timeLogActions'\r\nimport MonthPicker from \"./MonthPicker\";\r\n\r\nconst LogsPage = (props) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const timeLog = useSelector(state => state.timeLog)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadLogs())\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"mt-5\">\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\">\r\n                      Logs\r\n                      <Button\r\n                        color=\"primary\"\r\n                        tag={Link}\r\n                        to=\"/create-log\"\r\n                        size=\"sm\"\r\n                        className=\"ml-4\"\r\n                      >\r\n                        Create Log\r\n                      </Button>\r\n                    </h3>\r\n                  </div>\r\n                  <MonthPicker />\r\n                </Row>\r\n              </CardHeader>\r\n              <Logs logs={timeLog.logs} loading={timeLog.loading} />\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  );\r\n};\r\n\r\nexport default LogsPage;\r\n","import React from \"react\";\nimport LogsPage from \"./time_logs/LogsPage\";\nimport { useSelector } from 'react-redux'\nimport UsersPage from \"./time_logs/admin/UsersPage\";\n\n\nconst HomePage = () => {\n  const auth = useSelector(state => state.auth)\n  if (auth.user.is_company_owner) return <UsersPage />\n  return <LogsPage />;\n};\n\nexport default HomePage;\n","import React from \"react\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\n\r\nconst NotFound = ({ history }) => {\r\n  return (\r\n    <div className={classes.notFound}>\r\n      <div className={classes.notFound_box}>\r\n        <h1>Page not found</h1>\r\n        <button onClick={() => history.push(\"/\")}>Go Home</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../store/actions/authActions'\r\n\r\n\r\nconst Logout = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    dispatch(logout(history))\r\n\r\n    return (\r\n        <h1>Logged out</h1>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Logout","import React, { useEffect } from 'react'\r\nimport { Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Logs from '../time_logs/Logs'\r\nimport { loadLogs } from '../../store/actions/timeLogActions';\r\nimport MonthPicker from '../time_logs/MonthPicker';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst UserPage = ({match}) => {\r\n\r\n  const dispatch = useDispatch()\r\n  const auth = useSelector(state => state.auth)\r\n  const timeLog = useSelector(state => state.timeLog)\r\n\r\n  useEffect(() => {\r\n    dispatch(loadLogs({created_by: userId}))\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  const userId = match.params.userId\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"mt-5\">\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\"><Link to=\"/users\">Go Back</Link> &raquo; User ID: {userId}</h3>\r\n                  </div>\r\n                  <MonthPicker />\r\n                </Row>\r\n              </CardHeader>\r\n\r\n              {auth.user.is_company_owner ? (\r\n                <Logs logs={timeLog.logs} loading={timeLog.loading} />\r\n              ) : (\r\n                <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  )\r\n}\r\n\r\n\r\nexport default UserPage","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getLogReport } from '../../store/actions/timeLogActions'\r\nimport moment from 'moment';\r\nimport { Col, Card, CardBody, Form, FormGroup, Row, Input, Button } from 'reactstrap'\r\nimport { loadAllCompanies } from '../../store/actions/authActions';\r\nconst ReportFilterForm = () => {\r\n\r\n  const dispatch = useDispatch()\r\n  const timeLog = useSelector(state => state.timeLog)\r\n  const auth = useSelector(state => state.auth)\r\n  const todayDate = moment().format(\"YYYY-MM-DD\");\r\n  const monthFirstDate = moment().format(\"YYYY-MM-01\");\r\n\r\n  // states\r\n  const [start_date, setStartDate] = useState(monthFirstDate)\r\n  const [end_date, setEndDate] = useState(todayDate)\r\n  const [company, setCompany] = useState(0)\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault()\r\n    dispatch(getLogReport({start_date, end_date, company}))\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(loadAllCompanies())\r\n    // eslint-disable-next-line\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!auth.user.is_superuser) {\r\n      setCompany(auth.company.data.find(item => item.name === auth.user.company)?.id)\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [auth.company])\r\n\r\n  return (\r\n    <Row className=\"justify-content-md-center mb-5\">\r\n      <Col lg=\"5\" md=\"7\">\r\n        <Card className=\"bg-secondary shadow border-0\">\r\n          <CardBody>\r\n            <Form onSubmit={submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\">\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label htmlFor={\"startDate\"} text={\"Start Date\"} />\r\n                    <Input\r\n                      placeholder=\"Start Date\"\r\n                      id=\"startDate\"\r\n                      type=\"date\"\r\n                      value={start_date}\r\n                      onChange={e => setStartDate(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\">\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label htmlFor={\"endDate\"} text={\"End Date\"} />\r\n                    <Input\r\n                      placeholder=\"End Date\"\r\n                      id=\"endDate\"\r\n                      type=\"date\"\r\n                      max={moment().format(\"YYYY-MM-DD\")}\r\n                      value={end_date}\r\n                      onChange={e => setEndDate(e.target.value)}\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <FormGroup className=\"mb-3\">\r\n                    <Label htmlFor={\"company\"} text={\"Company\"} />\r\n                    {auth.company.loading ? <p><small>Loading...</small></p> : (\r\n                      <>\r\n                        {auth.company.error ? <p><small>{auth.company.error}</small></p> : (\r\n                          <Input type=\"select\" value={company} onChange={e => setCompany(e.target.value)}>\r\n                            <option value={0} disabled={!auth.user.is_superuser}>Select Company</option>\r\n                            {auth.company.data.map(item => (\r\n                              <option\r\n                                value={item.id}\r\n                                key={item.id}\r\n                                disabled={auth.user.company !== item.name && !auth.user.is_superuser}\r\n                              >\r\n                                {item.name}\r\n                              </option>\r\n                            ))}\r\n                          </Input>\r\n                        )}\r\n                      </>\r\n                    )}\r\n\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n              <div className=\"text-center\">\r\n                <Button disabled={timeLog.logReport.loading} className=\"my-1\" color=\"primary\" type=\"submit\">\r\n                  {timeLog.logReport.loading ? \"Please wait...\" : \"Get Report\"}\r\n                </Button>\r\n              </div>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ReportFilterForm\r\n\r\n\r\nconst Label = ({ htmlFor, text }) => {\r\n  return (\r\n    <label\r\n      className=\"form-control-label\"\r\n      htmlFor={htmlFor}\r\n    >\r\n      {text}\r\n    </label>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { Table } from \"reactstrap\";\r\nimport { createUUID } from '../../utils';\r\n\r\n\r\nconst BuildReport = ({ data }) => {\r\n\r\n  return (\r\n    <>\r\n      {data.map(item => (\r\n        <div className=\"mb-4\" key={createUUID()}>\r\n          <h2 className=\"text-center\">{item.company}</h2>\r\n          <h3 className=\"text-center\">{item.date_range}</h3>\r\n          <p className=\"text-center\">Click the user name to view his/her report for each date</p>\r\n          <Table bordered hover striped responsive>\r\n            <thead>\r\n              <tr>\r\n                <th className=\"text-center\">User</th>\r\n                <th className=\"text-center\">Total Time</th>\r\n                <th className=\"text-center\">Total Injury Noted</th>\r\n                <th className=\"text-center\">Total Policy Violation Noted</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {item.data.map(user => <SingleUserData key={createUUID()} item={user} />)}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default BuildReport\r\n\r\n\r\nconst SingleUserData = ({ item }) => {\r\n\r\n  const [isOpen, setIsOpen] = useState(false)\r\n\r\n  const handleDoubleClick = event => {\r\n    if (event.detail > 1) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <tr>\r\n        <th\r\n          style={{ cursor: 'pointer' }}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n          scope=\"row\"\r\n          className=\"text-center\"\r\n          onMouseDown={handleDoubleClick}\r\n        >\r\n          <b>{item.user}</b>\r\n        </th>\r\n        <td className=\"text-center\"><b>{item.total.time}</b></td>\r\n        <td className=\"text-center\"><b>{item.total.injury_noted}</b></td>\r\n        <td className=\"text-center\"><b>{item.total.policy_violation_noted}</b></td>\r\n      </tr>\r\n      {isOpen && (\r\n        <>\r\n          {item.data.map(dateDate => (\r\n            <tr key={createUUID()}>\r\n              <td className=\"text-center\" colSpan={2}>{dateDate.date}</td>\r\n              <td className=\"text-center\" colSpan={2}>{dateDate.time}</td>\r\n            </tr>\r\n          ))}\r\n          <tr>\r\n            <td className=\"text-center\" colSpan={2}><b>Total</b></td>\r\n            <td className=\"text-center\" colSpan={2}>{item.total.time}</td>\r\n          </tr>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport { Card, CardHeader, Container, Row, Col, CardBody } from \"reactstrap\";\r\nimport { useSelector } from 'react-redux'\r\nimport BuildReport from './BuildReport';\r\n\r\n\r\nconst ReportResult = () => {\r\n\r\n  const timeLog = useSelector(state => state.timeLog)\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mb-8\">\r\n        <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n          <Card className=\"shadow\">\r\n            <CardHeader className=\"border-0\">\r\n              <div className=\"col\">\r\n                <h3 className=\"mb-0 text-center\">Report Result</h3>\r\n              </div>\r\n            </CardHeader>\r\n            <hr className=\"my-0\" />\r\n            <CardBody>\r\n              {timeLog.logReport.loading ? (\r\n                <p className=\"text-center\">Loading...</p>\r\n              ) : (\r\n                <>\r\n                  {timeLog.logReport.error && <p className=\"text-center\">{timeLog.logReport.error}</p>}\r\n                  {Object.keys(timeLog.logReport.data).length > 0 && <BuildReport data={timeLog.logReport.data} />}\r\n                </>\r\n              )}\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default ReportResult","import React from 'react'\r\nimport { Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport ReportFilterForm from './ReportFilterForm';\r\nimport ReportResult from './ReportResult';\r\n\r\n\r\nconst ReportPage = () => {\r\n\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <Container className=\"mt-5\" fluid>\r\n        <Row className=\"mt-5\">\r\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n            <Card className=\"shadow\">\r\n              <CardHeader className=\"border-0\">\r\n                <Row className=\"align-items-center\">\r\n                  <div className=\"col\">\r\n                    <h3 className=\"mb-0\"><Link to=\"/\">Go Back</Link> &raquo; Report</h3>\r\n                  </div>\r\n                </Row>\r\n              </CardHeader>\r\n\r\n              {auth.user.is_company_owner ? (\r\n                <>\r\n                  <ReportFilterForm />\r\n                  <ReportResult />\r\n                </>\r\n              ) : (\r\n                <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>\r\n              )}\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </DashboardLayout>\r\n  )\r\n}\r\n\r\n\r\nexport default ReportPage","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport LoginPage from \"./pages/auth/LoginPage\";\r\nimport RegisterPage from \"./pages/auth/RegisterPage\";\r\n\r\nimport LogForm from \"./pages/time_logs/LogForm\";\r\nimport EditLog from \"./pages/time_logs/EditLog\";\r\nimport UsersPage from \"./pages/time_logs/admin/UsersPage\";\r\nimport EditProfilePage from \"./pages/user/EditProfilePage\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport NotFoundPage from \"./pages/NotFound/NotFound\";\r\nimport LogoutPage from \"./pages/auth/Logout\";\r\nimport { useSelector } from 'react-redux'\r\nimport UserPage from \"./pages/user/UserPage\";\r\nimport ReportPage from \"./pages/Report/ReportPage\";\r\n\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <PrivateRoute path=\"/\" exact component={HomePage} />\r\n      <PrivateRoute path=\"/create-log\" exact component={LogForm} />\r\n      <PrivateRoute path=\"/report\" exact component={ReportPage} />\r\n\r\n      <PrivateRoute path=\"/log/update/:logId\" exact component={EditLog} />\r\n      <PrivateRoute path=\"/users\" exact component={UsersPage} />\r\n      <PrivateRoute path=\"/user/:userId\" exact component={UserPage} />\r\n      <PrivateRoute path=\"/edit-profile\" exact component={EditProfilePage} />\r\n\r\n      {/* auth routes */}\r\n      <GuestRoute exact path=\"/login\" component={LoginPage} />\r\n      <GuestRoute exact path=\"/register\" component={RegisterPage} />\r\n\r\n      <Route exact path=\"/logout\" component={LogoutPage} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <>\r\n          {!auth.isAuthenticated ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n  const auth = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <>\r\n          {auth.isAuthenticated ? (\r\n            <Component {...props} />\r\n          ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          )}\r\n        </>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\nimport Routes from \"./Routes\";\nimport './App.css'\n\nconst App = () => <Routes />\n\nexport default App;\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    usersLoading: false\r\n}\r\n\r\nfunction adminReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.USERS_LOADED: {\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        }\r\n        case Types.USERS_LOADING: {\r\n            return {\r\n                ...state,\r\n                usersLoading: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default adminReducer","import * as Types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: !!localStorage.getItem(\"timeLoggerUserToken\"),\r\n  loginErrors: {},\r\n  registerErrors: {},\r\n  loading: false,\r\n  user: {\r\n    username: \"\",\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    address: \"\",\r\n    phone: \"\",\r\n    city: \"\",\r\n    country: \"\",\r\n    postal_code: \"\",\r\n    company: \"\"\r\n  },\r\n  company: {\r\n    loading: false,\r\n    data: [],\r\n    error: \"\"\r\n  }\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.USER_LOGGED_IN: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loginErrors: {},\r\n        user: action.payload ? action.payload : { ...state.user },\r\n      };\r\n    }\r\n    case Types.USER_LOGIN_ERROR: {\r\n      return {\r\n        ...state,\r\n        loginErrors: action.payload,\r\n      };\r\n    }\r\n    case Types.USER_REGISTERED: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        registerErrors: {},\r\n      };\r\n    }\r\n    case Types.USER_REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        registerErrors: action.payload,\r\n      };\r\n    }\r\n    case Types.AUTH_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    }\r\n    case Types.USER_LOGGED_OUT: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    }\r\n    case Types.COMPANY_DATA_LOADING: {\r\n      return {\r\n        ...state,\r\n        company: {\r\n          ...state.company,\r\n          loading: action.payload\r\n        }\r\n      }\r\n    }\r\n    case Types.COMPANY_DATA_LOADED: {\r\n      return {\r\n        ...state,\r\n        company: {\r\n          data: action.payload,\r\n          loading: false,\r\n          error: \"\"\r\n        }\r\n      }\r\n    }\r\n    case Types.COMPANY_DATA_LOAD_ERROR: {\r\n      return {\r\n        ...state,\r\n        company: {\r\n          data: [],\r\n          loading: false,\r\n          error: action.payload\r\n        }\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    logs: [],\r\n    logsLoadError: \"\",\r\n    loading: false,\r\n    logSaved: false,\r\n    logSaveError: \"\",\r\n    singleLog: {},\r\n    singleLogLoadError: \"\",\r\n    singleLogLoading: false,\r\n    logReport: {\r\n      error: \"\",\r\n      data: {},\r\n      loading: false,\r\n    }\r\n}\r\n\r\nfunction timeLogReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.TIME_LOGS_LOADED: {\r\n            return {\r\n                ...state,\r\n                logs: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOGS_LOAD_ERROR: {\r\n            return {\r\n                ...state,\r\n                logsLoadError: action.payload.message ? action.payload.message : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOGS_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_SAVED: {\r\n            return {\r\n                ...state,\r\n                logSaved: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_SAVE_ERROR: {\r\n            return {\r\n                ...state,\r\n                logSaveError: action.payload.message ? action.payload.message : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOADED: {\r\n            return {\r\n                ...state,\r\n                singleLog: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOAD_ERROR: {\r\n            return {\r\n                ...state,\r\n                singleLogLoadError: action.payload.detail ? action.payload.detail : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOADING: {\r\n            return {\r\n                ...state,\r\n                singleLogLoading: action.payload\r\n            }\r\n        }\r\n        case Types.LOG_REPORT_LOADING: {\r\n          return {\r\n            ...state,\r\n            logReport: {\r\n              ...state.logReport,\r\n              loading: action.payload\r\n            }\r\n          }\r\n        }\r\n        case Types.LOG_REPORT_LOADED: {\r\n          return {\r\n            ...state,\r\n            logReport: {\r\n              loading: false,\r\n              error: \"\",\r\n              data: action.payload\r\n            }\r\n          }\r\n        }\r\n        case Types.LOG_REPORT_LOAD_ERROR: {\r\n          return {\r\n            ...state,\r\n            logReport: {\r\n              loading: false,\r\n              error: action.payload,\r\n              data: {}\r\n            }\r\n          }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default timeLogReducer","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    userPasswordUpdated: false,\r\n    passwordUpdateErrors: {},\r\n    userProfileUpdated: false,\r\n    userProfileUpdateErrors: {},\r\n    userProfileInformation: {}\r\n}\r\n\r\nfunction userProfileReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.USER_PROFILE_INFORMATION_LOADED: {\r\n            return {\r\n                ...state,\r\n                userProfileInformation: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PASSWORD_UPDATED: {\r\n            return {\r\n                ...state,\r\n                userPasswordUpdated: true\r\n            }\r\n        }\r\n        case Types.USER_PASSWORD_UPDATE_ERROR: {\r\n            return {\r\n                ...state,\r\n                passwordUpdateErrors: action.payload,\r\n                userPasswordUpdated: false\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_UPDATED: {\r\n            return {\r\n                ...state,\r\n                userProfileUpdated: true,\r\n                userProfileInformation: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_UPDATE_ERROR: {\r\n            return {\r\n                ...state,\r\n                userProfileUpdated: false,\r\n                userProfileUpdateErrors: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userProfileReducer","import { combineReducers } from 'redux'\r\nimport adminReducer from './adminReducer'\r\nimport authReducer from './authReducer'\r\nimport timeLogReducer from './timeLogReducer'\r\nimport userProfileReducer from './userProfileReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    timeLog: timeLogReducer,\r\n    admin: adminReducer,\r\n    userProfile: userProfileReducer,\r\n})\r\n\r\nexport default rootReducer","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk'\r\n\r\nlet composers = [applyMiddleware(thunk)]\r\n\r\nif (process.env.REACT_APP_ENVIRONMENT === 'development'){\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){\r\n        composers.push(window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__())\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        ...composers\r\n    )\r\n)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUserInfo } from './store/actions/authActions';\nimport \"./assets/plugins/nucleo/css/nucleo.css\";\nimport \"./assets/scss/argon-dashboard-react.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nconst userToken = localStorage.getItem(\"timeLoggerUserToken\");\nif (userToken) {\n\tstore.dispatch(loadUserInfo());\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}