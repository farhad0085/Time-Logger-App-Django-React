{"version":3,"sources":["pages/NotFound/styles.module.scss","utils/index.js","utils/axios.js","store/actions/actionTypes.js","store/actions/authActions.js","components/Footers/AuthFooter.js","components/Navbars/TopNavBar.jsx","components/layouts/AuthLayout.jsx","pages/auth/LoginPage.jsx","pages/auth/RegisterPage.jsx","store/actions/timeLogActions.js","components/Footers/AdminFooter.js","components/layouts/DashboardLayout.jsx","pages/time_logs/LogForm.jsx","pages/time_logs/EditLog.jsx","store/actions/adminActions.js","pages/time_logs/admin/User.jsx","pages/time_logs/admin/Users.jsx","pages/time_logs/admin/UsersPage.jsx","pages/user/UpdatePasswordForm.jsx","store/actions/userProfileActions.js","pages/user/UpdateProfileForm.jsx","pages/user/EditProfilePage.jsx","pages/time_logs/Log.jsx","pages/time_logs/Logs.jsx","pages/time_logs/MonthPicker.jsx","pages/HomePage.jsx","pages/NotFound/NotFound.jsx","pages/auth/Logout.jsx","pages/user/UserPage.jsx","Routes.jsx","App.js","store/reducers/adminReducer.js","store/reducers/authReducer.js","store/reducers/timeLogReducer.js","store/reducers/userProfileReducer.js","store/reducers/rootReducer.js","store/index.js","index.js"],"names":["module","exports","getHeaders","additional","timeLoggerUserToken","localStorage","getItem","Authorization","createUUID","replace","c","r","Math","random","toString","instance","axios","create","baseURL","process","USER_LOGGED_IN","USER_LOGIN_ERROR","USER_REGISTERED","USER_REGISTER_ERROR","USER_LOGGED_OUT","AUTH_LOADING","TIME_LOGS_LOADED","TIME_LOGS_LOAD_ERROR","TIME_LOGS_LOADING","TIME_LOG_SAVED","TIME_LOG_SAVE_ERROR","TIME_LOG_LOADED","TIME_LOG_LOAD_ERROR","TIME_LOG_LOADING","USERS_LOADING","USERS_LOADED","USER_PROFILE_LOADING","USER_PROFILE_INFORMATION_LOADED","USER_PROFILE_UPDATED","USER_PROFILE_UPDATE_ERROR","USER_PASSWORD_UPDATED","USER_PASSWORD_UPDATE_ERROR","loadUserInfo","dispatch","type","Types","payload","get","headers","then","res","data","catch","error","removeItem","AuthFooter","className","Container","Row","Col","xl","Date","getFullYear","to","Nav","NavItem","NavLink","site_name","TopNavBar","props","auth","useSelector","state","Navbar","color","dark","expand","fluid","NavbarBrand","tag","id","UncontrolledCollapse","navbar","toggler","xs","isAuthenticated","user","is_superuser","AuthLayout","mainContent","React","useRef","location","useLocation","useEffect","document","body","classList","add","remove","documentElement","scrollTop","scrollingElement","current","ref","xmlns","preserveAspectRatio","version","viewBox","x","y","points","children","withRouter","history","useDispatch","useState","username","setUsername","password","setPassword","lg","md","Card","CardBody","Form","role","onSubmit","e","preventDefault","loginCreds","post","console","log","setItem","token","push","response","login","FormGroup","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","placeholder","value","onChange","target","loginErrors","style","Button","disabled","loading","RegisterPage","email","setEmail","password1","setPassword1","password2","setPassword2","first_name","setFirstName","last_name","setLastName","phone","setPhone","message","setMessage","registerErrors","non_field_errors","event","registerData","key","register","autoComplete","loadLogs","filter","method","url","AdminFooter","rel","DashboardLayout","LogForm","timeLog","todayDate","moment","format","date","setDate","hour","setHour","minute","setMinute","injury_noted","setInjuryNoted","policy_violation_noted","setPolicyViolationNoted","comment","setComment","duration","parseInt","max","rows","checked","htmlFor","createLogError","logSaved","fontWeight","logSaveError","EditLog","match","logId","params","detail","loadSingleLog","Object","keys","singleLog","length","singleLogLoading","singleLogLoadError","put","updateTimeLog","loadUsers","User","deleteHandle","userId","confirmAlert","title","buttons","label","onClick","delete","deleteUser","scope","size","Link","Users","users","Table","responsive","map","UsersPage","admin","CardHeader","UpdatePasswordForm","userProfile","old_password","setOldPassword","new_password1","setNewPassword1","new_password2","setNewPassword2","passwordUpdateErrors","userPasswordUpdated","UpdateProfileForm","address","setAddress","city","setCity","country","setCountry","postal_code","setPostalCode","profile","profileData","inputId","labelText","hasError","userProfileUpdateErrors","errorMsg","userProfileUpdated","Label","text","CustomFormGroup","inputType","EditProfilePage","changePasswordBtnClicked","setChangePasswordBtnClicked","Log","deleteTimeLog","Logs","logs","monthValue","setMonthValue","JSON","stringify","year","month","created_by","HomePage","NotFound","classes","notFound","notFound_box","Logout","logout","UserPage","Routes","path","exact","component","LoginPage","LogoutPage","NotFoundPage","GuestRoute","Component","rest","render","pathname","from","PrivateRoute","App","initialState","usersLoading","adminReducer","action","authReducer","logsLoadError","timeLogReducer","userProfileInformation","userProfileReducer","rootReducer","combineReducers","composers","applyMiddleware","thunk","store","createStore","compose","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.d1df97a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"styles_notFound__22mFc\",\"notFound_box\":\"styles_notFound_box__2vfwi\"};","export function getHeaders(additional) {\r\n  const timeLoggerUserToken = localStorage.getItem(\"timeLoggerUserToken\");\r\n\r\n  if (!timeLoggerUserToken)\r\n    return {\r\n      ...additional,\r\n    };\r\n\r\n  return {\r\n    Authorization: `Token ${timeLoggerUserToken}`,\r\n    ...additional,\r\n  };\r\n}\r\n\r\nexport function createUUID() {\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    var r = (Math.random() * 16) | 0,\r\n      v = c === \"x\" ? r : r && 0x3 | 0x8;\r\n    return v.toString(16);\r\n  });\r\n}\r\n\r\nexport function formatUserName(user) {\r\n  let name = \"\";\r\n\r\n  if (user.first_name) {\r\n    name += user.first_name + \" \";\r\n  }\r\n  if (user.last_name) {\r\n    name += user.last_name + \" \";\r\n  }\r\n  if (!user.first_name && !user.last_name) {\r\n    name = user.username;\r\n  }\r\n  if (name) {\r\n    name = name.trim();\r\n  }\r\n  return name;\r\n}\r\n\r\n\r\nexport const getLast5Year = () => {\r\n    let todayDate = new Date()\r\n    const years = []\r\n    for (let i=0; i < 5; i++){\r\n        years.push(todayDate.getFullYear() - i)\r\n    }\r\n    return years\r\n}","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_API_BASE\r\n})\r\n\r\nexport default instance\r\n\r\n","// auth action types\r\n// user\r\nexport const USER_LOGGED_IN = \"USER_LOGGED_IN\";\r\nexport const USER_LOGIN_ERROR = \"USER_LOGIN_ERROR\";\r\n\r\nexport const USER_REGISTERED = \"USER_REGISTERED\";\r\nexport const USER_REGISTER_ERROR = \"USER_REGISTER_ERROR\";\r\n\r\nexport const USER_LOGGED_OUT = \"USER_LOGGED_OUT\";\r\n\r\nexport const AUTH_LOADING = \"AUTH_LOADING\";\r\n\r\nexport const USER_INFO_LOADED = \"USER_INFO_LOADED\";\r\nexport const USER_INFO_LOAD_ERROR = \"USER_INFO_LOAD_ERROR\";\r\n\r\n\r\n// time logs\r\nexport const TIME_LOGS_LOADED = \"TIME_LOGS_LOADED\"\r\nexport const TIME_LOGS_LOAD_ERROR = \"TIME_LOGS_LOAD_ERROR\"\r\nexport const TIME_LOGS_LOADING = \"TIME_LOGS_LOADING\"\r\nexport const TIME_LOG_SAVED = \"TIME_LOG_SAVED\"\r\nexport const TIME_LOG_SAVE_ERROR = \"TIME_LOG_SAVE_ERROR\"\r\n\r\nexport const TIME_LOG_LOADED = \"TIME_LOG_LOADED\" // for single log\r\nexport const TIME_LOG_LOAD_ERROR = \"TIME_LOG_LOAD_ERROR\"\r\nexport const TIME_LOG_LOADING = \"TIME_LOG_LOADING\"\r\n\r\n// user\r\nexport const USERS_LOADING = \"USERS_LOADING\";\r\nexport const USERS_LOADED = \"USERS_LOADED\";\r\nexport const USERS_LOAD_ERROR = \"USERS_LOAD_ERROR\";\r\n\r\n// user profile\r\nexport const USER_PROFILE_LOADING = \"USER_PROFILE_LOADING\";\r\nexport const USER_PROFILE_INFORMATION_LOADED = \"USER_PROFILE_INFORMATION_LOADED\";\r\nexport const USER_PROFILE_INFORMATION_LOAD_ERROR = \"USER_PROFILE_INFORMATION_LOAD_ERROR\";\r\nexport const USER_PROFILE_UPDATED = \"USER_PROFILE_UPDATED\";\r\nexport const USER_PROFILE_UPDATE_ERROR = \"USER_PROFILE_UPDATE_ERROR\";\r\n\r\nexport const USER_PASSWORD_UPDATED = \"USER_PASSWORD_UPDATED\";\r\nexport const USER_PASSWORD_UPDATE_ERROR = \"USER_PASSWORD_UPDATE_ERROR\";\r\n","import { getHeaders } from \"../../utils\";\r\nimport axios from \"../../utils/axios\";\r\nimport * as Types from \"./actionTypes\";\r\n\r\n\r\nexport const login = (loginCreds, history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_LOGIN_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/login/\", loginCreds)\r\n    .then((res) => {\r\n        console.log(res.data);\r\n        localStorage.setItem(\"timeLoggerUserToken\", res.data.token);\r\n      dispatch({ type: Types.USER_LOGGED_IN });\r\n      history.push(\"/\");\r\n      dispatch(loadUserInfo());\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_LOGIN_ERROR,\r\n        payload: error.response ? error.response.data : {},\r\n      });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const register = (registerData, history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_REGISTER_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/register/\", registerData)\r\n    .then((res) => {\r\n      localStorage.setItem(\"timeLoggerUserToken\", res.data.key);\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n      dispatch({ type: Types.USER_REGISTERED });\r\n      history.push(\"/\");\r\n      dispatch(loadUserInfo());\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_REGISTER_ERROR,\r\n        payload: error.response ? error.response.data : {},\r\n      });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const logout = (history) => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n  localStorage.removeItem(\"timeLoggerUserToken\");\r\n  dispatch({ type: Types.USER_LOGGED_OUT });\r\n  dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n  history.push(\"/\");\r\n};\r\n\r\nexport const loadUserInfo = () => (dispatch) => {\r\n  dispatch({ type: Types.AUTH_LOADING, payload: true });\r\n\r\n  axios\r\n    .get(\"/auth/user/me/\", { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n      dispatch({ type: Types.USER_LOGGED_IN, payload: res.data });\r\n    })\r\n    .catch((error) => {\r\n      localStorage.removeItem(\"timeLoggerUserToken\");\r\n      dispatch({ type: Types.USER_LOGGED_OUT });\r\n      dispatch({ type: Types.AUTH_LOADING, payload: false });\r\n    });\r\n};\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { NavItem, NavLink, Nav, Container, Row, Col } from \"reactstrap\";\n\nconst AuthFooter = () => {\n  return (\n    <>\n      <footer className=\"py-5\">\n        <Container>\n          <Row className=\"align-items-center justify-content-xl-between\">\n            <Col xl=\"6\">\n              <div className=\"copyright text-center text-xl-left text-muted\">\n                © {new Date().getFullYear()}{\" \"}\n                <Link\n                  className=\"font-weight-bold ml-1\"\n                  to=\"/\"\n                >\n                  Company Name\n                </Link>\n              </div>\n            </Col>\n            <Col xl=\"6\">\n              <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n                <NavItem>\n                  <NavLink to=\"/\">\n                    Home\n                  </NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink to='/about'>\n                    About Us\n                  </NavLink>\n                </NavItem>\n              </Nav>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </>\n  );\n};\n\nexport default AuthFooter;\n","import React from 'react';\r\nimport { UncontrolledCollapse, Navbar, Row, Col, NavbarBrand, Nav, NavLink as Link, NavItem, Container } from 'reactstrap';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst site_name = \"Time Logger\"\r\n\r\nconst TopNavBar = (props) => {\r\n  const auth = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <Navbar color=\"primary\" dark expand=\"md\">\r\n      <Container fluid>\r\n        <NavbarBrand to=\"/\" tag={NavLink}>{site_name}</NavbarBrand>\r\n        <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <UncontrolledCollapse navbar toggler=\"#navbar-collapse-main\">\r\n          <div className=\"navbar-collapse-header d-md-none\">\r\n            <Row>\r\n              <Col className=\"collapse-brand\" xs=\"6\">\r\n                <Link to=\"/\">\r\n                  {site_name}\r\n                </Link>\r\n              </Col>\r\n              <Col className=\"collapse-close\" xs=\"6\">\r\n                <button className=\"navbar-toggler\" id=\"navbar-collapse-main\">\r\n                  <span />\r\n                  <span />\r\n                </button>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            {auth.isAuthenticated ? (\r\n              <>\r\n                <NavItem>\r\n                  <Link to=\"/create-log\" tag={NavLink}>\r\n                    <i className=\"fa fa-clock\" /> Create Log\r\n                  </Link>\r\n                </NavItem>\r\n                {auth.user.is_superuser && (\r\n                  <NavItem>\r\n                    <Link to=\"/users\" tag={NavLink}>\r\n                      <i className=\"fa fa-users\" /> Users\r\n                    </Link>\r\n                  </NavItem>\r\n                )}\r\n                <NavItem>\r\n                  <Link to=\"/edit-profile\" tag={NavLink}>\r\n                    <i className=\"fa fa-user\" /> Profile\r\n                  </Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <Link to=\"/logout\" tag={NavLink}>\r\n                    <i className=\"fas fa-sign-out-alt\" /> Logout\r\n                  </Link>\r\n                </NavItem>\r\n              </>\r\n            ) : (\r\n                <>\r\n                  <NavItem>\r\n                    <Link to=\"/login\" tag={NavLink}>\r\n                      <i className=\"fa fa-user\" /> Login\r\n                    </Link>\r\n                  </NavItem>\r\n                  <NavItem>\r\n                    <Link to=\"/register\" tag={NavLink}>\r\n                      <i className=\"fa fa-user\" /> Register\r\n                    </Link>\r\n                  </NavItem>\r\n                </>\r\n              )}\r\n          </Nav>\r\n        </UncontrolledCollapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default TopNavBar;","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Container, Row } from \"reactstrap\";\nimport AuthFooter from \"../Footers/AuthFooter\";\nimport TopNavBar from \"../Navbars/TopNavBar\";\n\nconst AuthLayout = (props) => {\n    const mainContent = React.useRef(null);\n    const location = useLocation();\n\n    React.useEffect(() => {\n        document.body.classList.add(\"bg-default\");\n        return () => {\n            document.body.classList.remove(\"bg-default\");\n        };\n    }, []);\n    React.useEffect(() => {\n        document.documentElement.scrollTop = 0;\n        document.scrollingElement.scrollTop = 0;\n        mainContent.current.scrollTop = 0;\n    }, [location]);\n\n    return (\n        <>\n            <div className=\"main-content\" ref={mainContent}>\n                <TopNavBar />\n                <div className=\"header bg-gradient-info py-7 py-lg-8\">\n                    <div className=\"separator separator-bottom separator-skew zindex-100\">\n                        <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            preserveAspectRatio=\"none\"\n                            version=\"1.1\"\n                            viewBox=\"0 0 2560 100\"\n                            x=\"0\"\n                            y=\"0\"\n                        >\n                            <polygon\n                                className=\"fill-default\"\n                                points=\"2560 0 2560 100 0 100\"\n                            />\n                        </svg>\n                    </div>\n                </div>\n                {/* Page content */}\n                <Container className=\"mt--8 pb-5\">\n                    <Row className=\"justify-content-center\">\n                        {props.children}\n                    </Row>\n                </Container>\n            </div>\n            <AuthFooter />\n        </>\n    );\n};\n\nexport default AuthLayout;\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { login } from \"../../store/actions/authActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthLayout from '../../components/layouts/AuthLayout'\r\nimport { Button, Card, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\r\n\r\nconst SignIn = ({ history }) => {\r\n    const auth = useSelector((state) => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login({ username, password }, history));\r\n    };\r\n\r\n    return (\r\n        <AuthLayout>\r\n            <Col lg=\"5\" md=\"7\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center text-muted mb-4\">\r\n                            <h2>Login to your account</h2>\r\n                        </div>\r\n                        <Form role=\"form\" onSubmit={submitHandler}>\r\n                            <FormGroup className=\"mb-3\">\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Username or Email\"\r\n                                        type=\"text\"\r\n                                        value={username}\r\n                                        onChange={e => setUsername(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n\r\n                                    />\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            {auth.loginErrors.error && (\r\n                                <small style={{color: 'red'}}>{auth.loginErrors.error}</small>\r\n                            )}\r\n                            <div className=\"text-center\">\r\n                                <Button disabled={auth.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                                    {auth.loading ? \"Please wait...\": \"Sign In\"}\r\n                                </Button>\r\n                            </div>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"mt-3\">\r\n                    <Col xs=\"6\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/fp\"\r\n                        >\r\n                            Forgot password?\r\n                        </Link>\r\n                    </Col>\r\n                    <Col className=\"text-right\" xs=\"6\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/register\"\r\n                        >\r\n                            Create new account\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </AuthLayout>\r\n    );\r\n};\r\n\r\nexport default withRouter(SignIn);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { register } from \"../../store/actions/authActions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthLayout from \"../../components/layouts/AuthLayout\";\r\nimport { Button, Card, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Row, Col } from \"reactstrap\";\r\n\r\nconst RegisterPage = ({ history }) => {\r\n    const dispatch = useDispatch();\r\n    const auth = useSelector((state) => state.auth);\r\n\r\n    // states\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password1, setPassword1] = useState(\"\");\r\n    const [password2, setPassword2] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [first_name, setFirstName] = useState(\"\");\r\n    const [last_name, setLastName] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n    // handlers\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const registerData = {\r\n            email,\r\n            password1,\r\n            password2,\r\n            username,\r\n            first_name,\r\n            last_name,\r\n            phone,\r\n        };\r\n        dispatch(register(registerData, history));\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!!auth.registerErrors.non_field_errors) {\r\n            setMessage(auth.registerErrors.non_field_errors[0]);\r\n        }\r\n    }, [auth]);\r\n\r\n    return (\r\n        <AuthLayout>\r\n            <Col lg=\"6\" md=\"8\">\r\n                <Card className=\"bg-secondary shadow border-0\">\r\n                    <CardBody className=\"px-lg-5 py-lg-5\">\r\n                        <div className=\"text-center text-muted mb-4\">\r\n                            <h2>Create a new Account</h2>\r\n                        </div>\r\n                        <Form role=\"form\" onSubmit={submitHandler}>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    \r\n                                    <Input\r\n                                        placeholder=\"Username\"\r\n                                        type=\"text\"\r\n                                        value={username}\r\n                                        onChange={(e) => setUsername(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.username && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.username[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-email-83\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        type=\"email\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                        placeholder=\"Email\"\r\n                                        autoComplete=\"new-email\"\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.email && (\r\n                                    <small style={{ color: \"red\" }}>{auth.registerErrors.email[0]}</small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"new-password\"\r\n                                        value={password1}\r\n                                        onChange={e => setPassword1(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.password1 && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.password1[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-lock-circle-open\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Confirm Password\"\r\n                                        type=\"password\"\r\n                                        autoComplete=\"new-password\"\r\n                                        value={password2}\r\n                                        onChange={e => setPassword2(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.password2 && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.password2[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"far fa-user\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"First Name\"\r\n                                        type=\"text\"\r\n                                        value={first_name}\r\n                                        onChange={(e) => setFirstName(e.target.value)}\r\n                                    />\r\n                                    <Input\r\n                                        placeholder=\"Last Name\"\r\n                                        type=\"text\"\r\n                                        value={last_name}\r\n                                        onChange={(e) => setLastName(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.first_name && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.first_name[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <InputGroup className=\"input-group-alternative\">\r\n                                    <InputGroupAddon addonType=\"prepend\">\r\n                                        <InputGroupText>\r\n                                            <i className=\"ni ni-mobile-button\" />\r\n                                        </InputGroupText>\r\n                                    </InputGroupAddon>\r\n                                    <Input\r\n                                        placeholder=\"Phone\"\r\n                                        type=\"phone\"\r\n                                        value={phone}\r\n                                        onChange={(e) => setPhone(e.target.value)}\r\n                                    />\r\n                                </InputGroup>\r\n                                {auth.registerErrors.phone && (\r\n                                    <small style={{ color: \"red\" }}>\r\n                                        {auth.registerErrors.phone[0]}\r\n                                    </small>\r\n                                )}\r\n                            </FormGroup>\r\n                            {message && (\r\n                                <small style={{color: 'red'}}>{message}</small>\r\n                            )}\r\n                            <div className=\"text-center\">\r\n                                <Button disabled={auth.loading} className=\"mt-4\" color=\"primary\" type=\"submit\">\r\n                                    {auth.loading ? \"Please wait...\" : \"Create account\" }\r\n                                </Button>\r\n                            </div>\r\n                            \r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n                <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\" xs=\"12\">\r\n                        <Link\r\n                            className=\"text-light\"\r\n                            to=\"/login\"\r\n                        >\r\n                            Already have an account? Login Here\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </AuthLayout>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"./actionTypes\";\r\n\r\nexport const loadLogs = (filter) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n\r\n  const method = filter ? \"post\" : \"get\";\r\n  axios({\r\n    method: method,\r\n    url: \"/time/logs/\",\r\n    data: filter,\r\n    headers: getHeaders(),\r\n  })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADED, payload: res.data });\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      dispatch({\r\n        type: Types.TIME_LOGS_LOAD_ERROR,\r\n        payload: error.response\r\n          ? error.response.data\r\n          : { message: \"Something went wrong\" },\r\n      });\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const createTimeLog = (data) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n  dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/time/logs/create/\", data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n      dispatch({ type: Types.TIME_LOG_SAVED, payload: true });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      if (error.response && error.response.data.duration) {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: { message: \"Duration must be less than or equal 24 hours\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: error.response\r\n            ? error.response.data\r\n            : { message: \"Something went wrong\" },\r\n        });\r\n      }\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const deleteTimeLog = (logId) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  axios\r\n    .delete(`/time/logs/${logId}`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch(loadLogs());\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n};\r\n\r\nexport const updateTimeLog = (logId, data) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOGS_LOADING, payload: true });\r\n  dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n  dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n  axios\r\n    .put(`/time/logs/${logId}/`, data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n      dispatch({ type: Types.TIME_LOG_SAVED, payload: true });\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n      if (error.response && error.response.data.duration) {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: { message: \"Duration must be less than or equal 24 hours\" },\r\n        });\r\n      } else {\r\n        dispatch({\r\n          type: Types.TIME_LOG_SAVE_ERROR,\r\n          payload: error.response\r\n            ? error.response.data\r\n            : { message: \"Something went wrong\" },\r\n        });\r\n      }\r\n      dispatch({ type: Types.TIME_LOGS_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const loadSingleLog = (logId) => (dispatch) => {\r\n  dispatch({ type: Types.TIME_LOG_LOADING, payload: true });\r\n  axios\r\n    .get(`/time/logs/${logId}`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      //   console.log(res.data);\r\n      dispatch({ type: Types.TIME_LOG_LOADED, payload: res.data });\r\n      dispatch({ type: Types.TIME_LOG_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      //   console.log(error.response);\r\n      dispatch({\r\n        type: Types.TIME_LOG_LOAD_ERROR,\r\n        payload: error.response\r\n          ? error.response.data\r\n          : { detail: \"Something went wrong\" },\r\n      });\r\n      dispatch({ type: Types.TIME_LOG_LOADING, payload: false });\r\n    });\r\n};\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Row, Col, Nav, NavItem, NavLink } from \"reactstrap\";\n\nconst AdminFooter = () => {\n  return (\n    <footer className=\"footer\">\n      <Row className=\"align-items-center justify-content-xl-between\">\n        <Col xl=\"6\">\n          <div className=\"copyright text-center text-xl-left text-muted\">\n            © {new Date().getFullYear()}{\" \"}\n            <Link\n              className=\"font-weight-bold ml-1\"\n              to=\"/\"\n              rel=\"noopener noreferrer\"\n            >\n              Company Name\n            </Link>\n          </div>\n        </Col>\n\n        <Col xl=\"6\">\n          <Nav className=\"nav-footer justify-content-center justify-content-xl-end\">\n            <NavItem>\n              <NavLink\n                to=\"/\"\n                rel=\"noopener noreferrer\"\n              >\n                Home\n              </NavLink>\n            </NavItem>\n\n            <NavItem>\n              <NavLink\n                to=\"/about\"\n                rel=\"noopener noreferrer\"\n              >\n                About Us\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Col>\n      </Row>\n    </footer>\n  );\n};\n\nexport default AdminFooter;\n","import React from 'react'\r\nimport { Container } from \"reactstrap\";\r\n// core components\r\nimport AdminFooter from \"../Footers/AdminFooter\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport TopNavBar from '../Navbars/TopNavBar';\r\n\r\n\r\nconst DashboardLayout = ({ props, children }) => {\r\n  const mainContent = React.useRef(null);\r\n  const location = useLocation();\r\n\r\n  React.useEffect(() => {\r\n    document.documentElement.scrollTop = 0;\r\n    document.scrollingElement.scrollTop = 0;\r\n    mainContent.current.scrollTop = 0;\r\n  }, [location]);\r\n\r\n  return (\r\n    <div className=\"main-content\" ref={mainContent}>\r\n      <TopNavBar />\r\n      {children}\r\n      <Container fluid>\r\n        <AdminFooter />\r\n      </Container>\r\n    </div>\r\n  )\r\n\r\n}\r\n\r\n\r\nexport default DashboardLayout","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { createTimeLog } from '../../store/actions/timeLogActions'\r\nimport moment from 'moment';\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout';\r\nimport {\r\n    Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n    InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport * as Types from '../../store/actions/actionTypes'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst LogForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const timeLog = useSelector(state => state.timeLog)\r\n    const todayDate = moment().format(\"YYYY-MM-DD\");\r\n\r\n    // states\r\n    const [date, setDate] = useState(todayDate)\r\n    const [hour, setHour] = useState(\"\")\r\n    const [minute, setMinute] = useState(\"\")\r\n    const [injury_noted, setInjuryNoted] = useState(false)\r\n    const [policy_violation_noted, setPolicyViolationNoted] = useState(false)\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n        const duration = (parseInt(hour || 0) * 60) + parseInt(minute || 0)\r\n        dispatch(createTimeLog({ date, duration, injury_noted, policy_violation_noted, comment }))\r\n    }\r\n\r\n    useEffect(() => {\r\n      dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n      dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n      // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <Container className=\"mt-5\" fluid>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"5\" md=\"7\">\r\n                        <Card className=\"bg-secondary shadow border-0\">\r\n                            <CardBody className=\"px-lg-5 py-lg-5\">\r\n                                <div className=\"text-center text-muted mb-4\">\r\n                                    <h2><Link to=\"/\">Go Back</Link> Log Time</h2>\r\n                                </div>\r\n                                <Form role=\"form\" onSubmit={submitHandler}>\r\n                                    <FormGroup className=\"mb-3\">\r\n                                        <InputGroup className=\"input-group-alternative\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"far fa-calendar\" />\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input\r\n                                                placeholder=\"Date\"\r\n                                                type=\"date\"\r\n                                                max={moment().format(\"YYYY-MM-DD\")}\r\n                                                value={date}\r\n                                                onChange={e => setDate(e.target.value)}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <InputGroup className=\"input-group-alternative\">\r\n                                            <InputGroupAddon addonType=\"prepend\">\r\n                                                <InputGroupText>\r\n                                                    <i className=\"far fa-clock\" />\r\n                                                </InputGroupText>\r\n                                            </InputGroupAddon>\r\n                                            <Input\r\n                                                placeholder=\"Hours\"\r\n                                                value={hour}\r\n                                                type=\"text\"\r\n                                                onChange={e => setHour(e.target.value.replace(/[^0-9]/g,'').replace(/2[4-9]|[3-9]\\d+|[1-9]\\d{2,}/g, '23'))}\r\n                                            />\r\n                                            <Input\r\n                                                placeholder=\"Minutes\"\r\n                                                value={minute}\r\n                                                type=\"text\"\r\n                                                onChange={e => setMinute(e.target.value.replace(/[^0-9]/g,'').replace(/6[0-9]|[7-9]\\d+|[1-9]\\d{2,}/g, '59'))}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <FormGroup>\r\n                                        <InputGroup className=\"input-group-alternative\">\r\n                                            <Input\r\n                                                placeholder=\"Comments (Optional)\"\r\n                                                value={comment}\r\n                                                rows={3}\r\n                                                type=\"textarea\"\r\n                                                onChange={e => setComment(e.target.value)}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </FormGroup>\r\n                                    <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"injuriNote\"\r\n                                            type=\"checkbox\"\r\n                                            checked={injury_noted}\r\n                                            onChange={e => setInjuryNoted(e.target.checked)}\r\n                                        />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"injuriNote\">\r\n                                            Were there any injuries noted?\r\n                                        </label>\r\n                                    </div>\r\n                                    <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                                        <input\r\n                                            className=\"custom-control-input\"\r\n                                            id=\"policyNote\"\r\n                                            type=\"checkbox\"\r\n                                            checked={policy_violation_noted}\r\n                                            onChange={e => setPolicyViolationNoted(e.target.checked)}\r\n                                        />\r\n                                        <label className=\"custom-control-label\" htmlFor=\"policyNote\">\r\n                                            Were there any violation of company policy noted?\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    {timeLog.createLogError && (\r\n                                        <small style={{ color: 'red' }}>{timeLog.createLogError}</small>\r\n                                    )}\r\n                                    <div className=\"text-center\">\r\n                                        {timeLog.logSaved && (\r\n                                            <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                                                Log saved successfully! <Link to=\"/\">Go back</Link>\r\n                                            </small>\r\n                                        )}\r\n                                        {timeLog.logSaveError && (\r\n                                            <small style={{ color: 'red', fontWeight: 'bold' }}>{timeLog.logSaveError}</small>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"text-center\">\r\n                                        <Button disabled={timeLog.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                                            {timeLog.loading ? \"Saving...\" : \"Save\"}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Form>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </DashboardLayout>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default LogForm","import React, { useEffect, useState } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateTimeLog, loadSingleLog } from '../../store/actions/timeLogActions'\r\nimport moment from 'moment';\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout';\r\nimport {\r\n    Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n    InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport * as Types from '../../store/actions/actionTypes'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst EditLog = ({ match }) => {\r\n    const dispatch = useDispatch()\r\n    const timeLog = useSelector(state => state.timeLog)\r\n    const todayDate = moment().format(\"YYYY-MM-DD\");\r\n\r\n    const logId = match.params.logId;\r\n\r\n    // load the log\r\n    useEffect(() => {\r\n        dispatch(loadSingleLog(logId))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (Object.keys(timeLog.singleLog).length > 0) {\r\n            setDate(timeLog.singleLog.date)\r\n            setHour(parseInt(timeLog.singleLog.duration / 60))\r\n            setMinute(timeLog.singleLog.duration % 60)\r\n            setInjuryNoted(timeLog.singleLog.injury_noted)\r\n            setPolicyViolationNoted(timeLog.singleLog.policy_violation_noted)\r\n            setComment(timeLog.singleLog.comment)\r\n        }\r\n    }, [timeLog.singleLog])\r\n\r\n    // states\r\n    const [date, setDate] = useState(todayDate)\r\n    const [hour, setHour] = useState(\"\")\r\n    const [minute, setMinute] = useState(\"\")\r\n    const [injury_noted, setInjuryNoted] = useState(false)\r\n    const [policy_violation_noted, setPolicyViolationNoted] = useState(false)\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n        const duration = (parseInt(hour || 0) * 60) + parseInt(minute || 0)\r\n        const requestData = { date, duration, injury_noted, policy_violation_noted, comment }\r\n        dispatch(updateTimeLog(logId, requestData))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: Types.TIME_LOG_SAVED, payload: false });\r\n        dispatch({ type: Types.TIME_LOG_SAVE_ERROR, payload: {} });\r\n        dispatch({ type: Types.TIME_LOG_LOAD_ERROR, payload: {} });\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <Container className=\"mt-5\" fluid>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg=\"5\" md=\"7\">\r\n                        <Card className=\"bg-secondary shadow border-0\">\r\n                            <CardBody className=\"px-lg-5 py-lg-5\">\r\n                                <div className=\"text-center text-muted mb-4\">\r\n                                    <h2><Link to=\"/\">Go Back</Link> Edit Log</h2>\r\n                                </div>\r\n                                {timeLog.singleLogLoading ? (\r\n                                    <h4 className=\"text-center\">\r\n                                        Loading... Please wait!\r\n                                    </h4>\r\n                                ) : (\r\n                                        <>\r\n                                            {timeLog.singleLogLoadError ? (\r\n                                                <h4 className=\"text-center\" style={{ color: 'red', fontWeight: 'bold' }}>\r\n                                                    {timeLog.singleLogLoadError}\r\n                                                </h4>\r\n                                            ) : (\r\n                                                    <Form role=\"form\" onSubmit={submitHandler}>\r\n                                                        <FormGroup className=\"mb-3\">\r\n                                                            <InputGroup className=\"input-group-alternative\">\r\n                                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                                    <InputGroupText>\r\n                                                                        <i className=\"far fa-calendar\" />\r\n                                                                    </InputGroupText>\r\n                                                                </InputGroupAddon>\r\n                                                                <Input\r\n                                                                    placeholder=\"Date\"\r\n                                                                    type=\"date\"\r\n                                                                    max={moment().format(\"YYYY-MM-DD\")}\r\n                                                                    value={date}\r\n                                                                    onChange={e => setDate(e.target.value)}\r\n                                                                />\r\n                                                            </InputGroup>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <InputGroup className=\"input-group-alternative\">\r\n                                                                <InputGroupAddon addonType=\"prepend\">\r\n                                                                    <InputGroupText>\r\n                                                                        <i className=\"far fa-clock\" />\r\n                                                                    </InputGroupText>\r\n                                                                </InputGroupAddon>\r\n                                                                <Input\r\n                                                                    placeholder=\"Hours\"\r\n                                                                    value={hour}\r\n                                                                    type=\"text\"\r\n                                                                    onChange={e => setHour(e.target.value.replace(/[^0-9]/g,'').replace(/2[4-9]|[3-9]\\d+|[1-9]\\d{2,}/g, '23'))}\r\n                                                                />\r\n                                                                <Input\r\n                                                                    placeholder=\"Minutes\"\r\n                                                                    value={minute}\r\n                                                                    type=\"text\"\r\n                                                                    onChange={e => setMinute(e.target.value.replace(/[^0-9]/g,'').replace(/6[0-9]|[7-9]\\d+|[1-9]\\d{2,}/g, '59'))}\r\n                                                                />\r\n                                                            </InputGroup>\r\n                                                        </FormGroup>\r\n                                                        <FormGroup>\r\n                                                            <InputGroup className=\"input-group-alternative\">\r\n\r\n                                                                <Input\r\n                                                                    placeholder=\"Comments (Optional)\"\r\n                                                                    value={comment}\r\n                                                                    rows={3}\r\n                                                                    type=\"textarea\"\r\n                                                                    onChange={e => setComment(e.target.value)}\r\n                                                                />\r\n                                                            </InputGroup>\r\n                                                        </FormGroup>\r\n                                                        <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                                                            <input\r\n                                                                className=\"custom-control-input\"\r\n                                                                id=\"injuriNote\"\r\n                                                                type=\"checkbox\"\r\n                                                                checked={injury_noted}\r\n                                                                onChange={e => setInjuryNoted(e.target.checked)}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\" htmlFor=\"injuriNote\">\r\n                                                                Were there any injuries noted?\r\n                                                            </label>\r\n                                                        </div>\r\n                                                        <div className=\"custom-control custom-control-alternative custom-checkbox mb-3\">\r\n                                                            <input\r\n                                                                className=\"custom-control-input\"\r\n                                                                id=\"policyNote\"\r\n                                                                type=\"checkbox\"\r\n                                                                checked={policy_violation_noted}\r\n                                                                onChange={e => setPolicyViolationNoted(e.target.checked)}\r\n                                                            />\r\n                                                            <label className=\"custom-control-label\" htmlFor=\"policyNote\">\r\n                                                                Were there any violation of company policy noted?\r\n                                                            </label>\r\n                                                        </div>\r\n\r\n                                                        {timeLog.createLogError && (\r\n                                                            <small style={{ color: 'red' }}>{timeLog.createLogError}</small>\r\n                                                        )}\r\n                                                        <div className=\"text-center\">\r\n                                                            {timeLog.logSaved && (\r\n                                                                <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                                                                    Log saved successfully! <Link to=\"/\">Go back</Link>\r\n                                                                </small>\r\n                                                            )}\r\n                                                            {timeLog.logSaveError && (\r\n                                                                <small style={{ color: 'red', fontWeight: 'bold' }}>{timeLog.logSaveError}</small>\r\n                                                            )}\r\n                                                        </div>\r\n                                                        <div className=\"text-center\">\r\n                                                            <Button disabled={timeLog.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n                                                                {timeLog.loading ? \"Saving...\" : \"Save\"}\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </Form>\r\n                                                )}\r\n                                        </>\r\n                                    )}\r\n\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </DashboardLayout>\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default EditLog","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"../actions/actionTypes\";\r\n\r\nexport const deleteUser = (userId) => (dispatch) => {\r\n  dispatch({ type: Types.USERS_LOADING, payload: true });\r\n  axios\r\n    .delete(`/auth/user/${userId}/`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch(loadUsers())\r\n    })\r\n    .catch((error) => {\r\n      console.log(error.response);\r\n    });\r\n};\r\n\r\nexport const loadUsers = () => (dispatch) => {\r\n  dispatch({ type: Types.USERS_LOADING, payload: true });\r\n  axios\r\n    .get(\"/time/users\", { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.USERS_LOADED, payload: res.data });\r\n      dispatch({ type: Types.USERS_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: Types.USERS_LOADING, payload: false });\r\n    });\r\n};\r\n","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { deleteUser } from \"../../../store/actions/adminActions\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst User = ({ user }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandle = userId => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure to delete this user?',\r\n            buttons: [\r\n                {\r\n                    label: 'Cancel'\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => dispatch(deleteUser(userId))\r\n                },\r\n            ]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" className=\"text-center\">{user.id}</th>\r\n            <th className=\"text-center\">{user.username}</th>\r\n            <td className=\"text-center\">{user.email}</td>\r\n            <td className=\"text-center\">{user.duration}</td>\r\n            <td className=\"text-center\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    tag={Link}\r\n                    to={`/user/${user.id}`}\r\n                >\r\n                    <i className=\"fa fa-eye\"></i>\r\n                </Button>\r\n                <Button\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    className=\"ml-3\"\r\n                    onClick={() => deleteHandle(user.id)}\r\n                >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default User","import React from 'react'\r\nimport { Table } from \"reactstrap\";\r\nimport { createUUID } from '../../../utils'\r\nimport User from './User';\r\n\r\n\r\nconst Users = ({users, loading}) => {\r\n  console.log(users);\r\n    return (\r\n        <div>\r\n            {loading ? <h4 className=\"text-center pb-3\">Loading...</h4> : (\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"text-center\">User ID</th>\r\n                            <th scope=\"col\" className=\"text-center\">Username</th>\r\n                            <th scope=\"col\" className=\"text-center\">Email</th>\r\n                            <th scope=\"col\" className=\"text-center\">This Month Total Time</th>\r\n                            <th scope=\"col\" className=\"text-center\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => <User key={createUUID()} user={user} />)}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Users","import React, { useEffect } from \"react\";\r\nimport { Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport DashboardLayout from '../../../components/layouts/DashboardLayout'\r\nimport { loadUsers } from '../../../store/actions/adminActions'\r\nimport Users from \"./Users\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst UsersPage = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const admin = useSelector(state => state.admin)\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadUsers())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <Container className=\"mt-5\" fluid>\r\n                <Row className=\"mt-5\">\r\n                    <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <Row className=\"align-items-center\">\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"mb-0\"><Link to=\"/\">Go Back</Link> Users</h3>\r\n                                    </div>\r\n                                </Row>\r\n                            </CardHeader>\r\n                            \r\n                            {auth.user.is_superuser ? (\r\n                                <Users users={admin.users} loading={admin.loading} />\r\n                            ) : (\r\n                                <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>\r\n                            )}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </DashboardLayout>\r\n    );\r\n};\r\n\r\nexport default UsersPage;\r\n","import React, { useState } from 'react'\r\nimport {\r\n    Col, Card, CardBody, Form, FormGroup, InputGroup, Row,\r\n    InputGroupAddon, InputGroupText, Input, Button, Container\r\n} from 'reactstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updatePassword } from '../../store/actions/userProfileActions'\r\n\r\nconst UpdatePasswordForm = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const userProfile = useSelector(state => state.userProfile)\r\n\r\n    const submitHandler = event => {\r\n        event.preventDefault()\r\n        dispatch(updatePassword({ old_password, new_password1, new_password2 }))\r\n    }\r\n\r\n    // states\r\n    const [old_password, setOldPassword] = useState(\"\")\r\n    const [new_password1, setNewPassword1] = useState(\"\")\r\n    const [new_password2, setNewPassword2] = useState(\"\")\r\n\r\n    return (\r\n        <Container className=\"my-5\" fluid>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col lg=\"5\" md=\"7\">\r\n                    <Card className=\"bg-secondary shadow border-0\">\r\n                        <CardBody className=\"px-lg-5 py-lg-5\">\r\n                            <div className=\"text-center text-muted mb-4\">\r\n                                <h2>Change Password</h2>\r\n                            </div>\r\n                            <Form role=\"form\" onSubmit={submitHandler}>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"Old Password\"\r\n                                            type=\"password\"\r\n                                            value={old_password}\r\n                                            onChange={e => setOldPassword(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.old_password && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.old_password[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"New Password\"\r\n                                            value={new_password1}\r\n                                            onChange={e => setNewPassword1(e.target.value)}\r\n                                            type=\"password\"\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.new_password1 && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.new_password1[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mb-3\">\r\n                                    <InputGroup className=\"input-group-alternative\">\r\n                                        <InputGroupAddon addonType=\"prepend\">\r\n                                            <InputGroupText>\r\n                                                <i className=\"fa fa-key\" />\r\n                                            </InputGroupText>\r\n                                        </InputGroupAddon>\r\n                                        <Input\r\n                                            placeholder=\"Confirm Password\"\r\n                                            value={new_password2}\r\n                                            type=\"password\"\r\n                                            onChange={e => setNewPassword2(e.target.value)}\r\n                                        />\r\n                                    </InputGroup>\r\n                                    {userProfile.passwordUpdateErrors.new_password2 && (\r\n                                        <small style={{ color: \"red\" }}>\r\n                                            {userProfile.passwordUpdateErrors.new_password2[0]}\r\n                                        </small>\r\n                                    )}\r\n                                </FormGroup>\r\n                                {userProfile.userPasswordUpdated && (\r\n                                    <div className=\"text-center\">\r\n                                        <small style={{ color: 'green', fontWeight: 'bold' }}>\r\n                                            Password updated successfully!\r\n                                        </small>\r\n                                    </div>\r\n                                )}\r\n\r\n                                <div className=\"text-center\">\r\n                                    <Button disabled={userProfile.loading} className=\"my-3\" color=\"primary\" type=\"submit\">\r\n                                        {userProfile.loading ? \"Updating...\" : \"Update Password\"}\r\n                                    </Button>\r\n                                </div>\r\n                            </Form>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default UpdatePasswordForm","import axios from \"../../utils/axios\";\r\nimport { getHeaders } from \"../../utils\";\r\nimport * as Types from \"./actionTypes\";\r\nimport { loadUserInfo } from \"./authActions\";\r\n\r\nexport const loadUserProfileInformation = (userId) => (dispatch) => {\r\n  axios\r\n    .get(`/auth/user/${userId}/`, { headers: getHeaders() })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({\r\n        type: Types.USER_PROFILE_INFORMATION_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_PROFILE_INFORMATION_LOAD_ERROR,\r\n        payload: false,\r\n      });\r\n    });\r\n};\r\n\r\nexport const updateProfile = (userId, profileData) => (dispatch) => {\r\n  dispatch({ type: Types.USER_PROFILE_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_PROFILE_UPDATE_ERROR, payload: {} });\r\n  axios\r\n    .put(`/auth/user/${userId}/`, profileData, { headers: getHeaders() })\r\n    .then((res) => {\r\n      console.log(res.data);\r\n      dispatch({ type: Types.USER_PROFILE_UPDATED, payload: res.data });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n      dispatch(loadUserInfo())\r\n    })\r\n    .catch((error) => {\r\n      dispatch({\r\n        type: Types.USER_PROFILE_UPDATE_ERROR,\r\n        payload: error.response.data,\r\n      });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n    });\r\n};\r\n\r\nexport const updatePassword = (data) => (dispatch) => {\r\n  dispatch({ type: Types.USER_PROFILE_LOADING, payload: true });\r\n  dispatch({ type: Types.USER_PASSWORD_UPDATE_ERROR, payload: {} });\r\n  axios\r\n    .post(\"/auth/password/change/\", data, { headers: getHeaders() })\r\n    .then((res) => {\r\n      dispatch({ type: Types.USER_PASSWORD_UPDATED });\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n    })\r\n    .catch((error) => {\r\n      dispatch({ type: Types.USER_PROFILE_LOADING, payload: false });\r\n      dispatch({\r\n        type: Types.USER_PASSWORD_UPDATE_ERROR,\r\n        payload: error.response.data,\r\n      });\r\n    });\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, CardBody, FormGroup, Form, Input, Row, Col } from \"reactstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { updateProfile } from '../../store/actions/userProfileActions'\r\nimport { USER_PROFILE_UPDATE_ERROR } from \"../../store/actions/actionTypes\";\r\n\r\n\r\nconst UpdateProfileForm = () => {\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst userProfile = useSelector(state => state.userProfile)\r\n\tconst auth = useSelector(state => state.auth)\r\n\r\n\t// states\r\n\tconst [username, setUsername] = useState(\"\")\r\n\tconst [email, setEmail] = useState(\"\")\r\n\tconst [first_name, setFirstName] = useState(\"\")\r\n\tconst [last_name, setLastName] = useState(\"\")\r\n\tconst [address, setAddress] = useState(\"\")\r\n\tconst [phone, setPhone] = useState(\"\")\r\n\tconst [city, setCity] = useState(\"\")\r\n\tconst [country, setCountry] = useState(\"\")\r\n\tconst [postal_code, setPostalCode] = useState(\"\")\r\n\r\n\tuseEffect(() => {\r\n\t\tif (auth.user.username) setUsername(auth.user.username)\r\n\t\tif (auth.user.email) setEmail(auth.user.email)\r\n\t\tif (auth.user.first_name) setFirstName(auth.user.first_name)\r\n\t\tif (auth.user.last_name) setLastName(auth.user.last_name)\r\n\t\tif (auth.user.profile.address) setAddress(auth.user.profile.address)\r\n\t\tif (auth.user.profile.phone) setPhone(auth.user.profile.phone)\r\n\t\tif (auth.user.profile.city) setCity(auth.user.profile.city)\r\n\t\tif (auth.user.profile.country) setCountry(auth.user.profile.country)\r\n\t\tif (auth.user.profile.postal_code) setPostalCode(auth.user.profile.postal_code)\r\n\t}, [auth.user])\r\n\r\n\tuseEffect(() => {\r\n\t\t// remove the previous errors and success message\r\n\t\tdispatch({type: USER_PROFILE_UPDATE_ERROR, payload: {} })\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault();\r\n\t\tconst data = { username, email, first_name, last_name, profile: { address, city, phone, country, postal_code } }\r\n\t\tdispatch(updateProfile(auth.user.id, data))\r\n\t}\r\n\r\n\treturn (\r\n\r\n\t\t<CardBody>\r\n\t\t\t<Form onSubmit={submitHandler}>\r\n\t\t\t\t<h6 className=\"heading-small text-muted mb-4\">\r\n\t\t\t\t\tUser information\r\n\t\t\t\t</h6>\r\n\t\t\t\t<div className=\"pl-lg-4\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-username\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Username\"\r\n\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\thasError={!!userProfile.userProfileUpdateErrors.username}\r\n\t\t\t\t\t\t\t\terrorMsg={userProfile.userProfileUpdateErrors.username}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-email\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Email address\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t\thasError={!!userProfile.userProfileUpdateErrors.email}\r\n\t\t\t\t\t\t\t\terrorMsg={userProfile.userProfileUpdateErrors.email}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-first-name\"\r\n\t\t\t\t\t\t\t\tlabelText=\"First name\"\r\n\t\t\t\t\t\t\t\tvalue={first_name}\r\n\t\t\t\t\t\t\t\tonChange={setFirstName}\r\n\t\t\t\t\t\t\t\thasError={!!userProfile.userProfileUpdateErrors.first_name}\r\n\t\t\t\t\t\t\t\terrorMsg={userProfile.userProfileUpdateErrors.first_name}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-last-name\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Last name\"\r\n\t\t\t\t\t\t\t\tvalue={last_name}\r\n\t\t\t\t\t\t\t\tonChange={setLastName}\r\n\t\t\t\t\t\t\t\thasError={!!userProfile.userProfileUpdateErrors.last_name}\r\n\t\t\t\t\t\t\t\terrorMsg={userProfile.userProfileUpdateErrors.last_name}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t\t<hr className=\"my-4\" />\r\n\r\n\t\t\t\t{/* Address */}\r\n\t\t\t\t<h6 className=\"heading-small text-muted mb-4\">\r\n\t\t\t\t\tContact information\r\n\t\t\t\t</h6>\r\n\t\t\t\t<div className=\"pl-lg-4\">\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col md=\"12\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-address\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Address\"\r\n\t\t\t\t\t\t\t\tvalue={address}\r\n\t\t\t\t\t\t\t\tonChange={setAddress}\r\n\t\t\t\t\t\t\t\thasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.address)}\r\n\t\t\t\t\t\t\t\terrorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.address)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-phone\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Phone\"\r\n\t\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\t\tonChange={setPhone}\r\n\t\t\t\t\t\t\t\thasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.phone)}\r\n\t\t\t\t\t\t\t\terrorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.phone)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-city\"\r\n\t\t\t\t\t\t\t\tlabelText=\"City\"\r\n\t\t\t\t\t\t\t\tvalue={city}\r\n\t\t\t\t\t\t\t\tonChange={setCity}\r\n\t\t\t\t\t\t\t\thasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.city)}\r\n\t\t\t\t\t\t\t\terrorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.city)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-country\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Country\"\r\n\t\t\t\t\t\t\t\tvalue={country}\r\n\t\t\t\t\t\t\t\tonChange={setCountry}\r\n\t\t\t\t\t\t\t\thasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.country)}\r\n\t\t\t\t\t\t\t\terrorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.country)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col lg=\"6\">\r\n\t\t\t\t\t\t\t<CustomFormGroup\r\n\t\t\t\t\t\t\t\tinputId=\"input-postal-code\"\r\n\t\t\t\t\t\t\t\tlabelText=\"Postal code\"\r\n\t\t\t\t\t\t\t\tvalue={postal_code}\r\n\t\t\t\t\t\t\t\tonChange={setPostalCode}\r\n\t\t\t\t\t\t\t\thasError={!!(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.postal_code)}\r\n\t\t\t\t\t\t\t\terrorMsg={(userProfile.userProfileUpdateErrors.profile && userProfile.userProfileUpdateErrors.profile.postal_code)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</div>\r\n\t\t\t\t{userProfile.userProfileUpdated && (\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<small style={{ color: 'green', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\tProfile updated successfully!\r\n\t\t\t\t\t\t</small>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t\t{Object.keys(userProfile.userProfileUpdateErrors).length > 0 && (\r\n\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t<small style={{ color: 'red', fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t\tCouldn't save the information, please try again!\r\n\t\t\t\t\t\t</small>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<Button disabled={userProfile.loading} className=\"my-4\" color=\"primary\" type=\"submit\">\r\n\t\t\t\t\t\t{userProfile.loading ? \"Saving...\" : \"Save\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Form>\r\n\t\t</CardBody>\r\n\r\n\t);\r\n\r\n}\r\n\r\n\r\nexport default UpdateProfileForm\r\n\r\n\r\nconst Label = ({ htmlFor, text }) => {\r\n\treturn (\r\n\t\t<label\r\n\t\t\tclassName=\"form-control-label\"\r\n\t\t\thtmlFor={htmlFor}\r\n\t\t>\r\n\t\t\t{text}\r\n\t\t</label>\r\n\t)\r\n}\r\n\r\nconst CustomFormGroup = (props) => {\r\n\r\n\tconst { inputId, labelText, value, onChange, inputType, placeholder, disabled, hasError, errorMsg } = props\r\n\r\n\treturn (\r\n\t\t<FormGroup>\r\n\t\t\t<Label htmlFor={inputId} text={labelText} />\r\n\t\t\t<Input\r\n\t\t\t\tclassName=\"form-control-alternative\"\r\n\t\t\t\tid={inputId}\r\n\t\t\t\tplaceholder={placeholder || labelText}\r\n\t\t\t\ttype={inputType || 'text'}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tdisabled={disabled || false}\r\n\t\t\t\tonChange={onChange ? e => onChange(e.target.value) : null}\r\n\t\t\t/>\r\n\t\t\t{hasError && (\r\n\t\t\t\t<small style={{ color: \"red\", fontWeight: 'bold' }}>\r\n\t\t\t\t\t\t{errorMsg}\r\n\t\t\t\t</small>\r\n\t\t\t)}\r\n\t\t</FormGroup>\r\n\t)\r\n}","import React, { useState } from \"react\";\nimport { Button, Card, CardHeader, Container, Row, Col } from \"reactstrap\";\nimport DashboardLayout from \"../../components/layouts/DashboardLayout\";\nimport UpdatePasswordForm from \"./UpdatePasswordForm\";\nimport UpdateProfileForm from \"./UpdateProfileForm\";\n\nconst EditProfilePage = () => {\n    const [changePasswordBtnClicked, setChangePasswordBtnClicked] = useState(false)\n\n    return (\n        <DashboardLayout>\n            {/* Page content */}\n            <Container className=\"mt-5\" fluid>\n                <Row>\n                    <Col className=\"order-xl-1\">\n                        <Card className=\"bg-secondary shadow\">\n                            <CardHeader className=\"bg-white border-0\">\n                                <Row className=\"align-items-center\">\n                                    <Col xs=\"8\">\n                                        <h3 className=\"mb-0\">\n                                            {changePasswordBtnClicked ? \"Change Password\" : \"My account\"}\n                                        </h3>\n                                    </Col>\n                                    <Col className=\"text-right\" xs=\"4\">\n                                        <Button\n                                            color={changePasswordBtnClicked ? \"danger\" : \"primary\"}\n                                            onClick={() => setChangePasswordBtnClicked(!changePasswordBtnClicked)}\n                                            size=\"sm\"\n                                        >\n                                            {changePasswordBtnClicked ? \"Cancel\" : \"Change Password\"}\n                                        </Button>\n                                    </Col>\n                                </Row>\n                            </CardHeader>\n                            {changePasswordBtnClicked ? <UpdatePasswordForm /> : <UpdateProfileForm />}\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </DashboardLayout>\n    );\n};\n\nexport default EditProfilePage;","import React from 'react'\r\nimport { Button } from 'reactstrap'\r\nimport { deleteTimeLog } from \"../../store/actions/timeLogActions\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Log = ({ log }) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const deleteHandle = logId => {\r\n        confirmAlert({\r\n            title: 'Confirm to delete',\r\n            message: 'Are you sure to delete this log?',\r\n            buttons: [\r\n                {\r\n                    label: 'Cancel'\r\n                },\r\n                {\r\n                    label: 'Yes',\r\n                    onClick: () => dispatch(deleteTimeLog(logId))\r\n                },\r\n            ]\r\n        });\r\n    }\r\n\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\" className=\"text-center\">{log.date}</th>\r\n            <td className=\"text-center\">{log.duration}</td>\r\n            <td className=\"text-center\">{log.injury_noted ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}</td>\r\n            <td className=\"text-center\">{log.policy_violation_noted ? <i className=\"fa fa-check\"></i> : <i className=\"fa fa-times\"></i>}</td>\r\n            <td className=\"text-center\">{log.comment || \"N/A\"}</td>\r\n            <td className=\"text-center\">\r\n                <Button\r\n                    color=\"primary\"\r\n                    size=\"sm\"\r\n                    to={`/log/update/${log.id}`}\r\n                    tag={Link}\r\n                >\r\n                    <i className=\"fa fa-edit\"></i>\r\n                </Button>\r\n                <Button\r\n                    color=\"danger\"\r\n                    size=\"sm\"\r\n                    className=\"ml-3\"\r\n                    onClick={() => deleteHandle(log.id)}\r\n                >\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </Button>\r\n            </td>\r\n        </tr>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Log","import React from 'react'\r\nimport { createUUID } from '../../utils'\r\nimport Log from './Log'\r\nimport { Table } from \"reactstrap\";\r\n\r\n\r\nconst Logs = ({ logs, loading }) => {\r\n\r\n    return (\r\n        <div>\r\n            {loading ? <h4 className=\"text-center pb-3\">Loading...</h4> : (\r\n                <Table className=\"align-items-center table-flush\" responsive>\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th scope=\"col\" className=\"text-center\">Date</th>\r\n                            <th scope=\"col\" className=\"text-center\">Duration</th>\r\n                            <th scope=\"col\" className=\"text-center\">Injuries Noted</th>\r\n                            <th scope=\"col\" className=\"text-center\">Violations noted</th>\r\n                            <th scope=\"col\" className=\"text-center\">Comments</th>\r\n                            <th scope=\"col\" className=\"text-center\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {logs.map(log => <Log key={createUUID()} log={log} />)}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Logs\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loadLogs } from '../../store/actions/timeLogActions';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\n\r\nconst MonthPicker = ({match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [monthValue, setMonthValue] = useState(moment().format(\"YYYY-MM\"))\r\n\r\n    const handleChange = e => {\r\n        const value = e.target.value\r\n        if (JSON.stringify(value) !== JSON.stringify(monthValue)) {\r\n            const date = moment(value)\r\n            let filter = { year: date.year(), month: date.month() + 1 }\r\n            if (match.params.userId){\r\n                filter = {...filter, created_by: match.params.userId}\r\n            }\r\n            dispatch(loadLogs(filter))\r\n        }\r\n        setMonthValue(value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"col text-right\">\r\n            <h3 className=\"mb-0\">\r\n                <input\r\n                    type=\"month\"\r\n                    value={monthValue}\r\n                    max={moment().format(\"YYYY-MM\")}\r\n                    onChange={handleChange}\r\n                />\r\n            </h3>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default withRouter(MonthPicker)\r\n\r\n","import React, { useEffect } from \"react\";\nimport { Button, Card, CardHeader, Container, Row, Col } from \"reactstrap\";\nimport { useSelector, useDispatch } from 'react-redux'\nimport DashboardLayout from '../components/layouts/DashboardLayout'\nimport Logs from \"./time_logs/Logs\";\nimport { Link } from \"react-router-dom\";\nimport { loadLogs } from '../store/actions/timeLogActions'\nimport MonthPicker from \"./time_logs/MonthPicker\";\n\nconst HomePage = (props) => {\n\n  const dispatch = useDispatch()\n  const timeLog = useSelector(state => state.timeLog)\n\n  useEffect(() => {\n    dispatch(loadLogs())\n    // eslint-disable-next-line\n  }, [])\n\n  return (\n    <DashboardLayout>\n      <Container className=\"mt-5\" fluid>\n        <Row className=\"mt-5\">\n          <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\n            <Card className=\"shadow\">\n              <CardHeader className=\"border-0\">\n                <Row className=\"align-items-center\">\n                  <div className=\"col\">\n                    <h3 className=\"mb-0\">\n                      Logs\n                      <Button\n                        color=\"primary\"\n                        tag={Link}\n                        to=\"/create-log\"\n                        size=\"sm\"\n                        className=\"ml-4\"\n                      >\n                        Create Log\n                      </Button>\n                    </h3>\n                  </div>\n                  <MonthPicker />\n                </Row>\n              </CardHeader>\n              <Logs logs={timeLog.logs} loading={timeLog.loading} />\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </DashboardLayout>\n  );\n};\n\nexport default HomePage;\n","import React from \"react\";\r\nimport classes from \"./styles.module.scss\";\r\n\r\n\r\nconst NotFound = ({ history }) => {\r\n  return (\r\n    <div className={classes.notFound}>\r\n      <div className={classes.notFound_box}>\r\n        <h1>Page not found</h1>\r\n        <button onClick={() => history.push(\"/\")}>Go Home</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { logout } from '../../store/actions/authActions'\r\n\r\n\r\nconst Logout = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    dispatch(logout(history))\r\n\r\n    return (\r\n        <h1>Logged out</h1>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Logout","import React, { useEffect } from 'react'\r\nimport { Card, CardHeader, Container, Row, Col } from \"reactstrap\";\r\nimport DashboardLayout from '../../components/layouts/DashboardLayout'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Logs from '../time_logs/Logs'\r\nimport { loadLogs } from '../../store/actions/timeLogActions';\r\nimport MonthPicker from '../time_logs/MonthPicker';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst UserPage = ({match}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const auth = useSelector(state => state.auth)\r\n    const timeLog = useSelector(state => state.timeLog)\r\n\r\n    useEffect(() => {\r\n        dispatch(loadLogs({created_by: userId}))\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const userId = match.params.userId\r\n\r\n    return (\r\n        <DashboardLayout>\r\n            <Container className=\"mt-5\" fluid>\r\n                <Row className=\"mt-5\">\r\n                    <Col className=\"mb-5 mb-xl-0\" xl=\"12\">\r\n                        <Card className=\"shadow\">\r\n                            <CardHeader className=\"border-0\">\r\n                                <Row className=\"align-items-center\">\r\n                                    <div className=\"col\">\r\n                                        <h3 className=\"mb-0\"><Link to=\"/users\">Go Back</Link> User ID: {userId}</h3>\r\n                                    </div>\r\n                                    <MonthPicker />\r\n                                </Row>\r\n                            </CardHeader>\r\n                            \r\n                            {auth.user.is_superuser ? (\r\n                                <Logs logs={timeLog.logs} loading={timeLog.loading} />\r\n                            ) : (\r\n                                <h4 className=\"text-center pb-4\" style={{color: 'red', fontWeight: 'bold'}}>You're not allowed in this page!</h4>\r\n                            )}\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </DashboardLayout>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default UserPage","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\n\r\nimport LoginPage from \"./pages/auth/LoginPage\";\r\nimport RegisterPage from \"./pages/auth/RegisterPage\";\r\n\r\nimport LogForm from \"./pages/time_logs/LogForm\";\r\nimport EditLog from \"./pages/time_logs/EditLog\";\r\nimport UsersPage from \"./pages/time_logs/admin/UsersPage\";\r\nimport EditProfilePage from \"./pages/user/EditProfilePage\";\r\n\r\nimport HomePage from \"./pages/HomePage\";\r\nimport NotFoundPage from \"./pages/NotFound/NotFound\";\r\nimport LogoutPage from \"./pages/auth/Logout\";\r\nimport { useSelector } from 'react-redux'\r\nimport UserPage from \"./pages/user/UserPage\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <Switch>\r\n            <PrivateRoute path=\"/\" exact component={HomePage} />\r\n            <PrivateRoute path=\"/create-log\" exact component={LogForm} />\r\n            <PrivateRoute path=\"/log/update/:logId\" exact component={EditLog} />\r\n            <PrivateRoute path=\"/users\" exact component={UsersPage} />\r\n            <PrivateRoute path=\"/user/:userId\" exact component={UserPage} />\r\n            <PrivateRoute path=\"/edit-profile\" exact component={EditProfilePage} />\r\n\r\n            {/* auth routes */}\r\n            <GuestRoute exact path=\"/login\" component={LoginPage} />\r\n            <GuestRoute exact path=\"/register\" component={RegisterPage} />\r\n\r\n            <Route exact path=\"/logout\" component={LogoutPage} />\r\n            <Route component={NotFoundPage} />\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default Routes;\r\n\r\nexport const GuestRoute = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                <>\r\n                    {!auth.isAuthenticated ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                            <Redirect\r\n                                to={{\r\n                                    pathname: \"/\",\r\n                                    state: { from: props.location },\r\n                                }}\r\n                            />\r\n                        )}\r\n                </>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const auth = useSelector(state => state.auth);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => (\r\n                <>\r\n                    {auth.isAuthenticated ? (\r\n                        <Component {...props} />\r\n                    ) : (\r\n                            <Redirect\r\n                                to={{\r\n                                    pathname: \"/login\",\r\n                                    state: { from: props.location },\r\n                                }}\r\n                            />\r\n                        )}\r\n                </>\r\n            )}\r\n        />\r\n    );\r\n};\r\n","import React from \"react\";\nimport Routes from \"./Routes\";\n\nconst App = () => <Routes />\n\nexport default App;\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    users: [],\r\n    usersLoading: false\r\n}\r\n\r\nfunction adminReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.USERS_LOADED: {\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        }\r\n        case Types.USERS_LOADING: {\r\n            return {\r\n                ...state,\r\n                usersLoading: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default adminReducer","import * as Types from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  isAuthenticated: !!localStorage.getItem(\"timeLoggerUserToken\"),\r\n  loginErrors: {},\r\n  registerErrors: {},\r\n  loading: false,\r\n  user: {\r\n    username: \"\",\r\n    email: \"\",\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    profile: {\r\n      address: \"\",\r\n      phone: \"\",\r\n      city: \"\",\r\n      country: \"\",\r\n      postal_code: \"\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Types.USER_LOGGED_IN: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loginErrors: {},\r\n        user: action.payload ? action.payload : { ...state.user },\r\n      };\r\n    }\r\n    case Types.USER_LOGIN_ERROR: {\r\n      return {\r\n        ...state,\r\n        loginErrors: action.payload,\r\n      };\r\n    }\r\n    case Types.USER_REGISTERED: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        registerErrors: {},\r\n      };\r\n    }\r\n    case Types.USER_REGISTER_ERROR: {\r\n      return {\r\n        ...state,\r\n        registerErrors: action.payload,\r\n      };\r\n    }\r\n    case Types.AUTH_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    }\r\n    case Types.USER_LOGGED_OUT: {\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    logs: [],\r\n    logsLoadError: \"\",\r\n    loading: false,\r\n    logSaved: false,\r\n    logSaveError: \"\",\r\n    singleLog: {},\r\n    singleLogLoadError: \"\",\r\n    singleLogLoading: false,\r\n}\r\n\r\nfunction timeLogReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.TIME_LOGS_LOADED: {\r\n            return {\r\n                ...state,\r\n                logs: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOGS_LOAD_ERROR: {\r\n            return {\r\n                ...state,\r\n                logsLoadError: action.payload.message ? action.payload.message : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOGS_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_SAVED: {\r\n            return {\r\n                ...state,\r\n                logSaved: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_SAVE_ERROR: {\r\n            return {\r\n                ...state,\r\n                logSaveError: action.payload.message ? action.payload.message : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOADED: {\r\n            return {\r\n                ...state,\r\n                singleLog: action.payload\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOAD_ERROR: {\r\n            return {\r\n                ...state,\r\n                singleLogLoadError: action.payload.detail ? action.payload.detail : \"\"\r\n            }\r\n        }\r\n        case Types.TIME_LOG_LOADING: {\r\n            return {\r\n                ...state,\r\n                singleLogLoading: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default timeLogReducer","import * as Types from '../actions/actionTypes'\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    userPasswordUpdated: false,\r\n    passwordUpdateErrors: {},\r\n    userProfileUpdated: false,\r\n    userProfileUpdateErrors: {},\r\n    userProfileInformation: {}\r\n}\r\n\r\nfunction userProfileReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case Types.USER_PROFILE_INFORMATION_LOADED: {\r\n            return {\r\n                ...state,\r\n                userProfileInformation: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_LOADING: {\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PASSWORD_UPDATED: {\r\n            return {\r\n                ...state,\r\n                userPasswordUpdated: true\r\n            }\r\n        }\r\n        case Types.USER_PASSWORD_UPDATE_ERROR: {\r\n            return {\r\n                ...state,\r\n                passwordUpdateErrors: action.payload,\r\n                userPasswordUpdated: false\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_UPDATED: {\r\n            return {\r\n                ...state,\r\n                userProfileUpdated: true,\r\n                userProfileInformation: action.payload\r\n            }\r\n        }\r\n        case Types.USER_PROFILE_UPDATE_ERROR: {\r\n            return {\r\n                ...state,\r\n                userProfileUpdated: false,\r\n                userProfileUpdateErrors: action.payload\r\n            }\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default userProfileReducer","import { combineReducers } from 'redux'\r\nimport adminReducer from './adminReducer'\r\nimport authReducer from './authReducer'\r\nimport timeLogReducer from './timeLogReducer'\r\nimport userProfileReducer from './userProfileReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    timeLog: timeLogReducer,\r\n    admin: adminReducer,\r\n    userProfile: userProfileReducer,\r\n})\r\n\r\nexport default rootReducer","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from 'redux-thunk'\r\n\r\nlet composers = [applyMiddleware(thunk)]\r\n\r\nif (process.env.REACT_APP_ENVIRONMENT === 'development'){\r\n    if (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__){\r\n        composers.push(window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__())\r\n    }\r\n}\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        ...composers\r\n    )\r\n)\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { loadUserInfo } from './store/actions/authActions';\nimport \"./assets/plugins/nucleo/css/nucleo.css\";\nimport \"./assets/scss/argon-dashboard-react.scss\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\n\nconst userToken = localStorage.getItem(\"timeLoggerUserToken\");\nif (userToken) {\n\tstore.dispatch(loadUserInfo());\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}